# -*- coding: utf-8 -*-
"""
------------------------------------------------------------------------------- 
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
metadata:
    
if you use spyder ctrl+4 to comment selection section and ctrl+5 to uncomment that
if you use jupyter ctrl+/ can comment and uncomment
if you use notePad++   ctrl+q can comment and uncomment

writed on <spyder> idle
this code have segmented in this ide
@author: sargoli

-------------------------------------------------------------------------------
"""


# %% LOAD LIBRARIES

# load libraries that we need 
# plz fill config & set directory of train and test dataset 
# also determine dir of out path to save models and reports


import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *



#  CONFIG
config = {
    'out_path': r'f:\OUT\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'E:\new_data_shahrivar_1402\sherkati\sher_train2.csv',
    
    # for evaluate
    'test_df': r'E:\new_data_shahrivar_1402\sherkati\sher_test.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
    }


# %% TRAIN & TEST
'''
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
RUN train and test depend on CONFIG inputs
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------tested √√
'''


#pd.read_csv(config['train_dataset'])
#pd.read_csv(config['test_df'])



# ==========================>>> inputs <<<=====================================
cols_ = config['with_facility_stacking_cols'] 
model_saved_name = 'smallb_withoutFCL_shahriver402_'
# =============================================================================





# load data
X_train, y_train = get_Xy(df_path=config['train_dataset'],cols=cols_)
print('shape of data:',X_train.shape,y_train.shape)



#  Train model
MODEL = train_model(X=X_train,y=y_train,cat_cols=config['cat_cols'],smote=True,
                    model_name=model_saved_name, params=[None,None,None],
                    out_path=config['out_path'])   

# evaluate model 
out_y = evaluate_solo2(sclf=MODEL, test_path=config['test_df'],smote=False,
                         cols=cols_,out_path=config['out_path'])


get_metrics_all(y=out_y,
            save_dir=config['out_path'],plot=True,
            train_no=1,
            day_date=14000101,
            custgroup=1,
            with_fcl=0,
            with_mali='Null',
            )

get_model_feat_imps(sclf=MODEL, save_path=config['out_path'], cols=cols_,
                    CUSTGROUP_num=1,
                    FEATURE_TYPE_CODE=1,
                    FEATURE_TYPE_DESC='USUAL',
                    from_date = 13970101,
                    to_date = 15000101,
                    with_fcl = 1,
                    with_mali = 1)





out_y = pd.read_csv(r'e:\out_ys.csv')


a = r'E:\new_data_shahrivar_1402\small-biz\res_lg_with_fcl\_smallb_withFCL_shahriver402__trainedModel_.pkl'
MODEL =  joblib.load(a)








df__ = pd.DataFrame(MODEL.clfs_[2][2].feature_importances_)
biz_stat_of_fi(df__, config['out_path'], 'aaaaa')

# =============================================================================
#     # get metrics
#     get_metrics(y=out_y.y_test_org,
#                 y_pred=out_y['y_test_pred_RF'],
#                 save_dir=config['out_path'],
#                 plot=True,
#                 title=model_saved_name
#                 )
# =============================================================================



# %%% more Functions
'''
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
there is more function if you need to use them
uncomment section with crtl + 5 shortcut
-------------------------------------------------------------------------------
------------------------------------------------------------------------------- tested √√√
'''


# =============================================================================
# 
#     # cross validation scores
#     X_train, y_train = get_Xy(df_path=config['test_df'],
#                              cols=cols_)   # config['without_facility_stacking_cols'] use this for change model to NoFacility features
#     
#     
#     score = cross_val_score_(X=X_train,
#                              y=np.ravel(y_train),
#                              model=MODEL,
#                              cv=5,
#                              save_dir=config['out_path']+'crossVal_score_') 
#     
# 
# 
# 
#      # load saved target and get_metrics by them
#      df = pd.read_csv(r'F:\OUT\test_\sec1\out_ys.csv')
#      y_pred = df['y_test_pred']
#      y_test = df['y_test_org']
#      get_metrics(y=y_test,y_pred=y_pred,save_dir='f:/OUT/test_/sec2')   
#     
#     
# 
#     
#     # HyperParameter Section  
#     hyper_params_randomizedsearchcv_for_all_models(X=X_train,y=y_train,n=2,save_path=config['out_path'])
#     
#     
#     
#     #Recursive Feature Selection 
#     feature_selection_rfecv_all_models(X=X_train, y=y_train, save_path=config['out_path'])
# 
#     
# 
# 
#     # Get feature importance
#     get_model_feat_imps(sclf=MODEL, save_path=config['out_path'], cols=cols_)
# 
#   
# 
# 
#     # get y_pred with pos_rate to evaluate in the Ratio
#     df = pd.read_csv(r'F:\OUT\test_\sec1\out_ys.csv')
#     y_pred = df['y_test_pred']
#     y_test = df['y_test_org']
#     y_true_scaled, y_pred_scaled = get_preds_for_evaluation(y_true=y_test, y_pred=y_pred, pos_rate=20)
#     print(f'we have 0 <{len(y_pred_scaled[y_pred_scaled == 0])}> times\n',
#           f'we have 1 <{len(y_pred_scaled[y_pred_scaled == 1])}> times')
#     
# =============================================================================
    
    
    


# %% check line count
'''
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
check line counts of two dataFrame
it is proper for predict data and its result
used in bunch and solo
-------------------------------------------------------------------------------
------------------------------------------------------------------------------- tested √√√
'''

# for bunch data============>>> inputs <<<=====================================
dir1 = r'F:\RISK\pred_result\small\with\*.csv'
dir2 = r'F:\RISK\DATA\predict\small\with\*.csv'
# =============================================================================

check_line(dir1,dir2)    

# solo df===================>>> inputs <<<=====================================
dir1 = r'F:\RISK\pred_result\small\with\DS_Predict_With_FCL_Small_biz_OBSERVATION_DATE_13970701__pred.csv'
dir2 = r'F:\RISK\DATA\predict\small\with\DS_Predict_With_FCL_Small_biz_OBSERVATION_DATE_13970701.csv'
# =============================================================================

check_line(dir1,dir2)




# %%% check line count of dataset
# =============================================================================

import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *


path1 = 'E:\*.csv'

lp = []
for i in glob.glob(path1, recursive = True):
    a = get_file_line_count(i)
    lp.append(a)

get_file_line_count(df_path)









# =============================================================================






    
# %% predict
# predict bunch 
'''
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
PREDICT
-------------------------------------------------------------------------------
------------------------------------------------------------------------------- tested √√√
'''


import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *



      
df_path2 = r'C:\Users\sargoli\Downloads\PERSONAL_CNTRCT_FEATURE_UNDER_STRESS_12_1_1_14020101__pred.csv'

get_file_line_count(df_path2)



# ==========================>>> inputs <<<=====================================
pred_df = r'F:\RISK\DATA\predict\tejari\tejari_stress\*.csv'
pred_result = r'F:\RISK\DATA\predict\tejari\tejari_stress\res\\'

path_model_with = r'E:\new_data_shahrivar_1402\business\res_lg\_tejari_withFCL_shahriver402__trainedModel_.pkl'
path_model_without = path_model_with #r'F:\RISK\train_result_stk\\\tejari_without\\tejari_without.pkl'



#  CONFIG
config = {
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}



cols = config['with_facility_stacking_cols']
# =============================================================================

for i in glob.glob(pred_df):
    
    print('\n\n\n',i,'\n\n\n')
    save_ = pred_result + i.split('\\')[-1].replace('.csv','__pred')
    print(save_, '---------------------------')
    
    predict2(file=i,
         without_path=path_model_without,
         with_path=path_model_with,
         save_path=save_,
         config=config)
    #time.sleep(50)
    
    
    
    

    
    
    
    
# %%% # predict single df


import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *

     
# CONFIG
config = {
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
    
}

# ==========================>>> inputs <<<=====================================
pred_df = r'F:\RISK\DATA\predict\small\shahrivar1402\\Small_biz_Without_FCL_13970101-13991001.csv'

pred_result = r'F:\OUT\\'

path_model_with_fcl = r'E:\new_data_shahrivar_1402\small-biz\res_lg_with_fcl\_smallb_withFCL_shahriver402__trainedModel_.pkl'
path_model_without_fcl = r'E:\new_data_shahrivar_1402\small-biz\res_lg_without_fcl\_smallb_withoutFCL_shahriver402__trainedModel_.pkl'

cols = config['without_facility_stacking_cols']
# =============================================================================


save_ = pred_result + pred_df.split('\\')[-1].replace('.csv','__pred')

predict2(file=pred_df,
     without_path=path_model_without_fcl,
     with_path=path_model_with_fcl,
     save_path=save_,
     config=config)













# %%%%%


import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *

      
#  CONFIG
config = {
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
    
}





# ==========================>>> inputs <<<=====================================

pred_df = r'F:\RISK\DATA\predict\shakhsi_stress\PERSONAL_CNTRCT_FEATURE_UNDER_STRESS_14_1_2_14020101.csv'

pred_result = r'F:\RISK\DATA\predict\\shakhsi_stress\res\\'

path_model_with = r'E:\new_data_shahrivar_1402\shakhsi\shakhsi_with_res\_new_personal_with_4200k__trainedModel_.pkl'
path_model_without = r'E:\new_data_shahrivar_1402\shakhsi\shakhsi_with_res\_new_personal_with_4200k__trainedModel_.pkl'

cols = config['with_facility_stacking_cols']
# =============================================================================




save_ = pred_result + pred_df.split('\\')[-1].replace('.csv','__pred')

print(save_)

predict2(file=pred_df,
     without_path=path_model_without,
     with_path=path_model_with,
     save_path=save_,
     config=config)






# %%%%% sherkati under stress


import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *

      


#  CONFIG
config = {
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
    
}


# ==========================>>> inputs <<<=====================================
pred_df = r'F:\pred\tejari\*.csv'
pred_result = r'F:\pred\tejari\res\\'

path_model_with = r'E:\new_data_shahrivar_1402\business\res_lg\_tejari_withFCL_shahriver402__trainedModel_.pkl'
path_model_without = path_model_with

cols = config['with_facility_stacking_cols']
# =============================================================================





for i in glob.glob(pred_df):
    print('\n',i,'\n')
    save_ = pred_result + i.split('\\')[-1].replace('.csv','__pred')
    print(save_, '---------------------------')
    
    predict2(file=i,
         without_path=path_model_without,
         with_path=path_model_with,
         save_path=save_,
         config=config)
    
    
    
    






# %% take stats from PD's  ♦♦♦ 

import sys 
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *



path = 'F:\RISK\pred_result\small\with\DS_Predict_With_FCL_Small_biz_OBSERVATION_DATE_14020101__pred.csv'

pd_stats(path, 'f://')





readed_df = pd.read_csv(path)

a = readed_df.describe()
a.to_csv('f://' + 'stats_.csv', index = True)




# %%%  get stats from predicted PDs

a = pred_stats(r'F:\RISK\DATA\pred_result\shahrivar1402\smallb\\',save_name ='s_w')



# %% compare label and predictedPds

from risk_utilsV2 import *


train_path = r'F:\RISK\DATA\train\\tejari\tejari_testdata.csv'
pred_path = r'F:\RISK\pred_result\\tejari\without\DS_Predict_Without_FCL_Tejari_OBSERVATION_DATE_14001001__pred.csv'

comprise(path_train=train_path,
         observation_date=14001001,
         path_DF_=r'F:\defualt&meansPD.csv',
         path_predicted=pred_path,save_path='f://',
         df_col1='tejari_without')




# %% combine dataFrame 
import pandas as pd
import glob




# for make train & Test 
# ==========================>>>>inputs<<<<=====================================
dataset_dir = r'E:\new_data_shahrivar_1402\small-biz\DS_Custgroup_4_Year_14*_Lable_*.csv'
save_path = r'E:\new_data_shahrivar_1402\small-biz\test.csv'
# =============================================================================






container = []
for i in glob.glob(dataset_dir):
    df = pd.read_csv(i)
    print(i, df.shape)
    
    container.append(df)
    #print(i[-25:-4])
    
print('\n\n', len(container))


alll = pd.concat(container)
    
alll.to_csv(save_path, index = False)
    



# take one folder of dataset and give combined all of them  
# *****************************************************************************    
# ==========================>>>>inputs<<<<=====================================
dataset_folder = r'E:\ss\\'
save_dir = 'f:\\'
save_name = 'small_with_reduced'
# =============================================================================

container = []
for i in glob.glob(dataset_folder + '*.csv'):
    readed_csv = pd.read_csv(i)
    container.append(readed_csv)
    print(readed_csv.shape)
    
alll = pd.concat(container)
alll.to_csv(save_dir + save_name + '.csv', index = False)















# %% feature importance ♦♦♦
# old old 



    


cols_ = config['with_facility_stacking_cols'] 


model_path = r'F:\OUT\mshkk\trainedModel_sherkati_with_.pkl'
m = joblib.load(model_path)

rf, xg, logit = get_model_feat_imps(sclf=m, cols=cols_, save_path='f:\\')

rf.plot(kind = 'kde', use_index =True)

dir(xg.importance)

xg.importance.sort_values()


plt.pie(rf.importance, labels=xg.features)




plt.pie(rf.importance, labels=rf.features)



our_model = joblib.load(r'F:\RISK\train_result_stk\sherkati_with\sherkati_with.pkl')

our_model.clfs_[1].get_booster().get_score(importance_type='cover')




# %% GET TOP 5


import sys 
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utilsV2 import *
import glob

features = pick_top_n(r'F:\RISK\....\_XGboost__FeatureImportance_.csv',2)


# CONFIG


config = {
    'out_path': r'F:\OUT\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns
    'without_facility_stacking_cols': features,
    'with_facility_stacking_cols': features,
    'cat_cols': [], #'CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
    
}


cols_ = config['without_facility_stacking_cols'] 
model_saved_name = 'small_without_'   
 
a =[];b = []
for i in cols_:
    if i not in a:
        a.append(i)
    else:
        b.append(i)
print(b)



if __name__ == '__main__':

    X_train, y_train = get_Xy(df_path=config['train_dataset'],
                              cols=cols_)  
    
    print(X_train.shape,y_train.shape)

    MODEL = train_model(X=X_train,
                        y=y_train,
                        
                        # SMOTE for OverSample Data
                        smote=False,
                        
                        # category columns needed for WOE and Scaler
                        cat_cols=config['cat_cols'],
                        
                        # save
                        model_name=model_saved_name,
                        
                        out_path=config['out_path']) # please use "/" slash for directory
    
    y_df = evaluate(sclf=MODEL,
                             test_path=config['test_df'],
                             smote=False,
                             cols=cols_,
                             out_path=config['out_path'])
    print(y_df.y_test_org, y_df.y_test_pred)
    
    get_metrics(y=y_df.y_test_org,y_pred=y_df.y_test_pred,save_dir=config['out_path'])
    
    
    
    


# ==========================>>> inputs <<<=====================================
pred_df = r'F:\RISK\DATA\predict\small\with\*.csv'
pred_result = r'F:\OUT\mshkk\\top3\preds\\'

path_model_with = r'F:\OUT\mshkk\\top3\trainedModel_small_with_.pkl'
path_model_without = r'F:\RISK\train_result_stk\\\tejari_without\\tejari_without.pkl'
# =============================================================================






for i in glob.glob(pred_df):
    a = pd.read_csv(i)
    print('\n',i,'\n')
    save_ = pred_result + i.split('\\')[-1].replace('.csv','__pred')
    print(save_, '---------------------------')
    
    predict2(file=i,
         without_path=path_model_without,
         with_path=path_model_with,
         save_path=save_,
         config=config)
    
    
    
stats(r'F:\OUT\mshkk\\top5lg_with_small\preds\\',save_name ='s_with')

from risk_utilsV2 import *

rf, xg, logit = get_model_feat_imps(sclf=MODEL,
                                    cols=cols_,
                                    save_path=r'F:\OUT\mshkk\\top5lg_with_small\\')




# %% get feature importance from pickle model 

import sys;import glob;from risk_utilsV2 import *
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils


#  CONFIG


config = {
    'out_path': r'F:\\OUT\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\Sherkati\sherkati_traindata_delob.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\Sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}


path = r'F:\OUT\sherkati_with\\trainedModel_MAIN_TEST.pkl'
save_path = r'F:\OUT\sherkati_with\\'
our_model = joblib.load(path)
rf, xg, logit = get_model_feat_imps(sclf=our_model,
                                    cols=config['with_facility_stacking_cols'],
                                    save_path=save_path)

 
importances = our_model.clfs_[1].feature_importances_


sorted_indices = np.argsort(importances)[::-1]
 
feat_labels = config['with_facility_stacking_cols']
 
for f in range(len(feat_labels)):
    print("%2d) %-*s %f" % (f + 1, 30,
                            feat_labels[sorted_indices[f]],
                            importances[sorted_indices[f]]))




plt.title('Feature Importance')
plt.bar(range(len(feat_labels)), importances[sorted_indices], align='center')
plt.xticks(range(len(feat_labels)), feat_labels, rotation=90)
plt.tight_layout()
plt.show()


from xgboost import plot_importance

our_model = joblib.load(r'F:\RISK\train_result_stk\small_with\small_with.pkl')



plot_importance(our_model.clfs_[1])


our_model.clfs_[1].feature_importances_


our_model.clfs_[1].get_booster().get_score(importance_type='cover')
a = our_model.clfs_[1].get_booster().get_score(importance_type='gain')

a


for f in range(len(feat_labels)):
    print("%2d) %-*s %f" % (f + 1, 30,
                            feat_labels[sorted_indices[f]],
                            importances[sorted_indices[f]]))




# %% feature  weight gain cover XG 





import sys;import glob
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utilsV2 import *


#  CONFIG


config = {
    'out_path': r'F:\OUT\\fi\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\small\small_Biz_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\small\small_Biz_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}


cols_ = config['with_facility_stacking_cols'] 
model_saved_name = 'small_with_nestim300'    




xg_params = {
    'booster':'dart',
    'colsample_bytree':0.6,
    'enable_categorical':True,
    'gamma':0.01,
    'learning_rate':0.5,
    'max_depth':40,
    'min_child_weight':2,
    'n_estimators':300,
    'objective':'binary:logistic',
    'reg_alpha':0,
    'reg_lambda':3,
    'subsample':0.6,
    'tree_method':'hist'
    }


xg_params2 = {
    'n_estimators':300,
    }




xg_params3 = {
    'booster':'dart',
    'colsample_bytree':0.6,
    'enable_categorical':True,
    'gamma':1,
    'learning_rate':0.5,
    'max_depth':40,
    'min_child_weight':2,
    'n_estimators':80,
    'objective':'binary:logistic',
    'reg_alpha':0,
    'reg_lambda':3,
    'subsample':0.6,
    'tree_method':'hist'
    }





par =[]
par = [None,None,xg_params]


if __name__ == '__main__':
# =============================================================================
#     # load data
# =============================================================================
    X_train, y_train = get_Xy(df_path=config['train_dataset'],
                              cols=cols_)  
    
    print(X_train.shape,y_train.shape)

# =============================================================================
#     #  Train model
# =============================================================================
    MODEL = train_model(X=X_train,
                        y=y_train,
                        
                        # SMOTE for OverSample Data
                        smote=True,
                        
                        # category columns needed for WOE and Scaler
                        cat_cols=config['cat_cols'],
                        
                        # save
                        model_name=model_saved_name,
                        params=par,
                        out_path=config['out_path']) # please use "/" slash for directory
    
    
    rf, xg, logit = get_model_feat_imps(sclf=MODEL,
                                        cols=config['with_facility_stacking_cols'],
                                        save_path=config['out_path']) 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    # MODEL.predict(X_train)
    
    
    our_model = joblib.load(r'F:\RISK\train_result_stk\sherkati_with\sherkati_with.pkl')

    our_model.clfs_[1].get_booster().get_score(importance_type='cover')

    
# =============================================================================
#     # evaluate model 
# =============================================================================
    out_y = evaluate3(sclf=our_model,
                             test_path=config['test_df'],
                             smote=False,
                             cols=cols_,
                             out_path=config['out_path'])
    
    
    
# =============================================================================
#      # get metrics
# =============================================================================

    df = pd.read_csv(r'F:\RISK\train_result_stk\tejari_with\out_ys.csv')


    get_metrics(y=df.y_test_org,
                y_pred=df['y_test_pred_RF'],
                save_dir=r'F:\RISK\train_result_stk\tejari_with\\',
                title='_REPORT_RF')


['y_test_pred_XGB ']
['y_test_pred_RF']
['y_test_pred_LOGIT ']





# %%  Template code

# ==========================>>> inputs <<<=====================================
data_utils_path = r'E:\\GitLab\\credit-risk-ai\\' # path of risk_utils.py

#  CONFIG
config = {
    'Facility':False, # plz set True or False
    'save_name':'sherkati_with_facility',
    'out_path': r'F:\OUT\oo\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
    
    'use_SMOTE':False
}
# =============================================================================
# =============================================================================

import sys 
sys.path.insert(0,data_utils_path) 
from risk_utilsV2 import *

if config['Facility']:
    print('\n>Facility Features are Considered<\n')
    cols_ = config['with_facility_stacking_cols'] 
else:
    print('\n<Facility Features are NOT Considered>\n')
    cols_ = config['without_facility_stacking_cols']
  



if __name__ == '__main__':
# =============================================================================
#     # load data
# =============================================================================
    X_train, y_train = get_Xy(df_path=config['train_dataset'],
                              cols=cols_)  
    
    print('shape of DataFrame:\n',X_train.shape,y_train.shape)

# =============================================================================
#     #  Train model
# =============================================================================
    MODEL = train_model(X=X_train,
                        y=y_train,
                        
                        # SMOTE for OverSample Data
                        smote=config['use_SMOTE'],
                        
                        # category columns needed for WOE and Scaler
                        cat_cols=config['cat_cols'],
                        
                        # save
                        model_name=config['save_name'],
                        params=[None,None,None],
                        out_path=config['out_path']) # please use "/" slash for directory
    print('- - Train Model is Done - -')
    
     
    # MODEL.predict(X_train)
    
    


    
# =============================================================================
#     # evaluate model 
# =============================================================================
    out_y = evaluate(sclf=MODEL,
                             test_path=config['test_df'],
                             smote=False,
                             cols=cols_,
                             out_path=config['out_path'])
    
    print('- - evaluate is Done - -')
    
# =============================================================================
#      # get metrics
# =============================================================================



    get_metrics(y=out_y.y_test_org,
                y_pred=out_y['y_test_pred_RF'],
                save_dir=config['out_path'],
                title=config['save_name'])


# =============================================================================
    # Get feature importance
# =============================================================================
    get_model_feat_imps(sclf=MODEL, save_path=config['out_path'], cols=cols_)




# =============================================================================
# 
# # =============================================================================
# #     # cross validation scores
# # =============================================================================
#     X_train, y_train = get_Xy(df_path=config['test_dsf'],
#                               cols=cols_)   # config['without_facility_stacking_cols'] use this for change model to NoFacility features
#     
#     
#     score = cross_val_score_(X=X_train,
#                              y=np.ravel(y_train),
#                              model=MODEL,
#                              cv=5,
#                              save_dir=config['out_path']+'crossVal_score_')
#     
# 
# =============================================================================


    
    # HyperParameter Section  
# =============================================================================
#     hyper_params_randomizedsearchcv_for_all_models(X=X_train,y=y_train,n=300,save_path=config['out_path'])
# =============================================================================
    
    
    
    #Recursive Feature Selection 
# =============================================================================
#     feature_selection_by_rfecv_for_all_models(X=X_train, y=y_train, save_path=out_path)
# =============================================================================

    


  


    # get y_pred with pos_rate to evaluate in the Ratio
# =============================================================================
#     get_preds_for_evaluation(y_true=y, y_pred=y_pred, pos_rate=20)
# =============================================================================
    
    







# %%  feature stats 


import sys 
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utilsV2 import *

df_p = r'F:\RISK\train_result_stk\sherkati_with\Feature_Importance\_XGboost__FeatureImportance_.csv'

csv__ = pd.read_csv(df_p)




f_df = pd.read_csv('F:\OUT\oo\Feature_importance\_XGboost__FeatureImportance_.csv')

d = 9

a = list(f_df.importance[-d:])
a = a.reverse()
b = sum(f_df.importance[:-d])
a.append(b)

c = list(zip(f_df.features[-d:],f_df.importance[-d:]))
c.extend([('others',sum(f_df.importance[:-d]))])


# plt.pie(a,labels=c)
patches, texts = plt.pie(a, startangle=1, radius=1.1)

plt.legend(patches, c, loc='lower left',
           fontsize=8)











# %%feature stats 2 

from risk_utilsV2 import *

#      _Logistic__FeatureImportance_
#   _randomForest__FeatureImportance_
#   _XGboost__FeatureImportance_



df_p = r'F:\RISK\train_result_stk\small_without\Feature_Importance\_Logistic__FeatureImportance_.csv'
df_of_feature = pd.read_csv(df_p)

name ='sherkati_with_LG'

features_piechart(df_of_feature,9,'f:\\',name)

biz_stat_of_fi(df_of_feature,'f://', name)

U

 




# %% learning curve 
our_model = joblib.load('F:\sherkati_with.pkl')

cols_ = config['with_facility_stacking_cols'] 
model_saved_name = 'oo'    

X_train, y_train = get_Xy(df_path=config['train_dataset'],
                          cols=cols_)  



train_sizes, train_scores, test_scores = learning_curve(our_model.clfs_[0],
                                                        X_train, y_train, cv=10,
                                                        scoring='accuracy',
                                                        n_jobs=-1,
                                                        train_sizes=np.linspace(0.01, 1.0, 10))


train_mean = np.mean(train_scores, axis=1)
train_std = np.std(train_scores, axis=1)

test_mean = np.mean(test_scores, axis=1)
test_std = np.std(test_scores, axis=1)


plt.subplots(1, figsize=(10,10))
plt.plot(train_sizes, train_mean, '--', color="#111111",  label="Training score")
plt.plot(train_sizes, test_mean, color="#111111", label="Cross-validation score")

plt.fill_between(train_sizes, train_mean - train_std, train_mean + train_std, color="#DDDDDD")
plt.fill_between(train_sizes, test_mean - test_std, test_mean + test_std, color="#DDDDDD")

plt.title("Learning Curve")
plt.xlabel("Training Set Size"), plt.ylabel("Accuracy Score"), plt.legend(loc="best")
plt.tight_layout()
plt.show()




















# plot learning curve of an xgboost model
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from xgboost import XGBClassifier
from matplotlib import pyplot



# define dataset
# split data into train and test sets
X_train, y_train = get_Xy(df_path=config['train_dataset'],
                          cols=cols_)  

X_test, y_test = get_Xy(df_path=config['test_df'],
                          cols=cols_)  

# define the model
model = XGBClassifier(n_estimators=4000, eta=0.5, subsample=0.5, colsample_bytree=0.5)


evalset = [(X_train, y_train), (X_test,y_test)]


model.fit(X_train, y_train, eval_metric='logloss', eval_set=evalset)


yhat = model.predict(X_test)

score = accuracy_score(y_test, yhat)
print('Accuracy: %.3f' % score)


results = model.evals_result()

pyplot.plot(results['validation_0']['logloss'], label='train')
pyplot.plot(results['validation_1']['logloss'], label='test')
# show the legend
pyplot.legend()
# show the plot
pyplot.show()







# =============================================================================
#  
# config = {
#     'out_path': r'/data/sargoli/report/out/xxx/',            # models and data are saved in that folder
#     
#     # for train 
#     'train_dataset':r'/data/RISK_DATA/sherkati/sherkati_traindata.csv',
#     
#     # for evaluate
#     'test_df': r'/data/RISK_DATA/sherkati/sherkati_testdata.csv',
#     
#     # needed columns                
#     'without_facility_stacking_cols': ['OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
#     'with_facility_stacking_cols': ['OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
#     'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
# }
# 
# cols_ = config['without_facility_stacking_cols'] 
# 
# 
# xg_params = {
#     'booster':'dart',
#     'colsample_bytree':0.06,
#     'eta':0.05,
#     'subsample':0.06,
#     'n_estimators':3000,
#     }
# 
# par = [None,None,xg_params]
# 
# 
# # =============================================================================
# #     # load data
# # =============================================================================
# X_train, y_train = get_Xy(df_path=config['train_dataset'],
#                           cols=cols_)  
# X_test, y_test = get_Xy(df_path=config['test_df'],
#                           cols=cols_)  
# print(X_train.shape,y_train.shape)
# 
# print('\n','-' * 20, '\n','SMOTE NOT applied trainFunc','\n', X_train.shape,'-' * 20, '\n')
# 
# oversample = SMOTE()
# X, y = oversample.fit_resample(X_train, y_train)
# print('\n','-' * 20, '\n','SMOTE applied trainFunc','\n','-' * 20, '\n')
# print(X.shape,y.shape)
# 
# 
# model = XGBClassifier(n_estimators=3000, eta=0.01, subsample=0.1, colsample_bytree=.1)
# evalset = [(X_train, y_train), (X_test,y_test)]
# 
# 
# 
# model.fit(X_train, y_train, eval_metric='logloss', eval_set=evalset)
# 
# 
# yhat = model.predict(X_test)
# 
# score = accuracy_score(y_test, yhat)
# print('Accuracy: %.3f' % score)
# 
# 
# results = model.evals_result()
# 
# pyplot.plot(results['validation_0']['logloss'], label='train')
# pyplot.plot(results['validation_1']['logloss'], label='test')
# # show the legend
# pyplot.legend()
# # show the plot
# pyplot.show()
# =============================================================================


# =============================================================================
# 
# #%% 10 get_metrics
# def get_metrics2(y = [], y_pred = [], save_dir=None, title='_REPORT_'):     
#     '''
#     Parameters
#     ----------
#     y: orginal y of data
#     y_pred: y predicted by the model
#     save_dir: in the case of None, the metrics result is displyed on the screen
#                if it is set The metrics result is printed in path.txt
#     title: Title of logs and charts
# 
#     Description
#     ----------
#     this function makes log file from True y and predicted y
#     
#     '''
#     if len(y) == 0:
#         if len(y_pred) == 0:
#             print('using -evaluate- function to provide y & y_pred from train dataset of config')
#             y, y_pred,*_ = evaluate()
#     
#     
#     fpr, tpr, thresholds = roc_curve(y, y_pred, pos_label= 1)
#     j = tpr - fpr
#     best_threshold = thresholds[j.argmax()]
#     prec, rec, f1, sup = precision_recall_fscore_support(y, y_pred)
#     AUC = auc(fpr, tpr)
#     log_data = f'''
# ===========================================
#               {title}
# ===========================================
# auc         : {AUC}
# -------------------------------------------
# classification_report_imbalanced:
# {classification_report_imbalanced(y, y_pred)}
# -------------------------------------------
# confusion_matrix:
# {confusion_matrix(y, y_pred)}
# -------------------------------------------
# precision 0 : {prec[0]}
# precision 1 : {prec[1]}
# -------------------------------------------
# recall    0 : {rec[0]}
# recall    1 : {rec[1]}
# -------------------------------------------
# f1 score  0 : {f1[0]}
# f1 score  1 : {f1[1]}
# -------------------------------------------
# sup       0 : {sup[0]}
# sup       1 : {sup[1]}
# -------------------------------------------
# fpr            : {fpr}
# tpr            : {tpr}
# thresholds     : {thresholds}
# best_threshold : {best_threshold}
# -------------------------------------------
# accuracy_score : {accuracy_score(y, y_pred)}
# -------------------------------------------
# balanced_accuracy_score: {balanced_accuracy_score(y, y_pred)}
# -------------------------------------------
# f1_score       : {f1_score(y, y_pred)}
# f1_score_macro : {f1_score(y, y_pred, average='macro')}
# f1_score_micro : {f1_score(y, y_pred, average='micro')}
# -------------------------------------------
# f2_score       : {fbeta_score(y, y_pred, beta=2)}
# f2_score_macro : {fbeta_score(y, y_pred, average='macro', beta=2)}
# f2_score_micro : {fbeta_score(y, y_pred, average='micro', beta=2)}
# -------------------------------------------
# f0.5_score       : {fbeta_score(y, y_pred, beta=0.5)}
# f0.5_score_macro : {fbeta_score(y, y_pred, average='macro', beta=0.5)}
# f0.5_score_micro : {fbeta_score(y, y_pred, average='micro', beta=0.5)}
# -------------------------------------------
# matthews_corrcoef    : {matthews_corrcoef(y, y_pred)}
# -------------------------------------------
# geometric_mean_score : {geometric_mean_score(y, y_pred)}
# -------------------------------------------
# brier_score_loss     : {brier_score_loss(y, y_pred, pos_label= 1)}
# -------------------------------------------
# classification_report :
# {classification_report(y, y_pred)}
# -------------------------------------------
# roc diagram data:
# {list(zip(fpr, tpr))}
# -------------------------------------------
# 
# -----------------
# ==========================================='''
#     
#     
#     f = open(save_dir +f'/{title}_MetricsReport.txt', 'a+') if save_dir else None    
#     print('='*100, '\n', log_data, '\n', file=f)
#     if f:
#         f.close()
#         
#     roc(y, y_pred,title, save_path=save_dir)
#     
# get_metrics2(y=y_test,
#             y_pred=yhat,
#             save_dir=config['out_path'],
#             title='_REPORT_RF')
# 
# =============================================================================


# %% ■■



# %% RandomOverSampler


cols_ = config['without_facility_stacking_cols'] 
model_saved_name = 'sherkati_without_'



if __name__ == '__main__':
# =============================================================================
#     # load data
# =============================================================================
    X_train, y_train = get_Xy(df_path=config['train_dataset'],
                              cols=cols_)  
    
    print(X_train.shape,y_train.shape)
    
    
    y_train.value_counts(normalize = True)

    
    
from imblearn.over_sampling import RandomOverSampler, SMOTE
    
ros = RandomOverSampler(random_state=255)
X_train_ros, y_train_ros= ros.fit_resample(X_train, y_train)



y_train_ros.value_counts(normalize = True)

    




params = [None,None,None]


woe_encoder,scaler = fit_woe_encoder(X=X,
                                     y=y,
                                     model_name='randomsampler',
                                     cat_cols=config['cat_cols'],
                                    out_path=config['out_path'])
if params[0] is not None:    
    lgt = make_pipeline(woe_encoder, scaler, LogisticRegression(**params[0]))
else:
    lgt = make_pipeline(woe_encoder, scaler, LogisticRegression(C=150,
                                                                penalty='l2',
                                                                solver='newton-cg',
                                                                max_iter=100000,
                                                                tol=1e-4,
                                                                multi_class='auto',                                                             
                                                                verbose=1))  
if params[1] is not None:
    rf = RandomForestClassifier(**params[1])
else:
    rf = RandomForestClassifier(n_estimators=50,
                                class_weight='balanced',
                                criterion='gini',
                                max_features='sqrt',
                                max_depth=10,
                                max_leaf_nodes=20,
                                max_samples=None,
                                ccp_alpha=0,
                                min_samples_split=.1,
                                min_samples_leaf=3,
                                min_weight_fraction_leaf=0,
                                min_impurity_decrease=0,
                                bootstrap=True,
                                oob_score=False,
                                warm_start=False,                                
                                verbose=1)
if params[2] is not None:
    xgb = XGBClassifier(**params[2])
else:        
    xgb = XGBClassifier(n_estimators=80,
                        objective='binary:logistic',
                        booster='gbtree',
                        tree_method='hist',
                        subsample=.8,
                        colsample_bytree=.8,
                        gamma=.5,
                        learning_rate=.3,
                        max_depth=15,
                        min_child_weight=10,
                        reg_alpha=0,
                        reg_lambda=1,
                        enable_categorical=True)


lr = LogisticRegression(random_state=255)

skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=255)
sclf = StackingCVClassifier(classifiers=[rf, xgb, lgt],
                            meta_classifier=lr,                             
                            use_probas=True,
                            cv=skf,
                            shuffle=True,
                            use_features_in_secondary=False,
                            store_train_meta_features=True,
                            n_jobs=1,
                            random_state=255,
                            verbose=1,)


sclf.fit(X_train, np.ravel(y_train))







out_y = evaluate(sclf=sclf,
                         test_path=config['test_df'],
                         smote=False,
                         cols=cols_,
                         out_path=config['out_path'])



# =============================================================================
#      # get metrics
# =============================================================================


get_metrics(y=out_y.y_test_org,
            y_pred=out_y['y_test_pred_RF'],
            save_dir=config['out_path'],
            title='_REPaaaaaaORT_RF')


# %%% با سی تا فیچر برتر 

z = pd.read_csv(r'F:\RISK\train_result_stk\sherkati_without\Feature_importance\_XGboost__FeatureImportance_.csv')

list(z[-30:].features)



import sys 
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utilsV2 import *

#  CONFIG

config = {
    'out_path': r'F:\OUT\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': list(z[-30:].features),
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': None,
}

cols_ = config['without_facility_stacking_cols'] 
model_saved_name = 'sherkati_without_'



if __name__ == '__main__':
# =============================================================================
#     # load data
# =============================================================================
    X_train, y_train = get_Xy(df_path=config['train_dataset'],
                              cols=cols_)  
    
    print(X_train.shape,y_train.shape)

# =============================================================================
#     #  Train model
# =============================================================================
    MODEL = train_model(X=X_train,
                        y=y_train,
                        
                        # SMOTE for OverSample Data
                        smote=True,
                        
                        # category columns needed for WOE and Scaler
                        cat_cols=config['cat_cols'],
                        
                        # save
                        model_name=model_saved_name,
                        params=[None,None,None],
                        out_path=config['out_path']) # please use "/" slash for directory
    
    
     
    # MODEL.predict(X_train)
    
    
    
# =============================================================================
#     # evaluate model 
# =============================================================================
    out_y = evaluate(sclf=MODEL,
                             test_path=config['test_df'],
                             smote=False,
                             cols=cols_,
                             out_path=config['out_path'])
    
    
    
# =============================================================================
#      # get metrics
# =============================================================================

    df = pd.read_csv(r'F:\RISK\train_result_stk\tejari_with\out_ys.csv')


    get_metrics(y=out_y.y_test_org,
                y_pred=out_y['y_test_pred_RF'],
                save_dir=config['out_path'],
                title='_REPORT_RF')

 

# %%%  SMOTE on each observation



def create_dataframe(df,save_path):
    X = df.loc[:, df.columns != "LABEL"]
    y = df.loc[:, df.columns == 'LABEL']
    
    print(X.dtypes.unique())           
    
    X['CBI_CNTRCT_ASL_MAX_SUM_3Y'] = X['CBI_CNTRCT_ASL_MAX_SUM_3Y'].replace([''], '0')
    X.CBI_CNTRCT_ASL_MAX_SUM_3Y = X.CBI_CNTRCT_ASL_MAX_SUM_3Y.astype(float)
    X['CBI_CNTRCT_ASL_MAX_MAX_3Y'] = X['CBI_CNTRCT_ASL_MAX_MAX_3Y'].replace([''], '0')
    X.CBI_CNTRCT_ASL_MAX_MAX_3Y = X.CBI_CNTRCT_ASL_MAX_MAX_3Y.astype(float)
    
    print(X.dtypes.unique())  
    
    X.fillna(0, inplace = True)
    
    
    oversample = SMOTE()
    X_test, y_test = oversample.fit_resample(X, y)
    
    
    print(y.value_counts(),y_test.value_counts())
        
        
    oooo = pd.concat([X_test,y_test], axis=1)
    
    
    all1 =[]
    all1.append(oooo)
    df_save = pd.concat(all1)
    
    oooo.to_csv(save_path, index=False)
    



dataset_dir0 = r'F:\RISK\DATA\train\sherkati\Custgroup_3_Year_1399_Lable_0_With_FCL.csv'
dataset_dir1 = r'F:\RISK\DATA\train\sherkati\Custgroup_3_Year_1399_Lable_1_With_FCL.csv'



df0 = pd.read_csv(dataset_dir0)
df1 = pd.read_csv(dataset_dir1)

df = pd.concat([df0,df1])

# df.OBSERVATION_DATE

df_1_1 = df.loc[df.OBSERVATION_DATE == 13990101]
df_1_4 = df.loc[df.OBSERVATION_DATE == 13990401]
df_1_7 = df.loc[df.OBSERVATION_DATE == 13990701]
df_1_10 = df.loc[df.OBSERVATION_DATE == 13991001]


create_dataframe(df_1_1, r'F:\RISK\DATA\train\sherkati_over_obdate\Custgroup_3_Year_1399_1_1.csv')
create_dataframe(df_1_4, r'F:\RISK\DATA\train\sherkati_over_obdate\Custgroup_3_Year_1399_1_4.csv')
create_dataframe(df_1_7, r'F:\RISK\DATA\train\sherkati_over_obdate\Custgroup_3_Year_1399_1_7.csv')
create_dataframe(df_1_10, r'F:\RISK\DATA\train\sherkati_over_obdate\Custgroup_3_Year_1399_1_10.csv')











# %% undersampling


read1 = pd.read_csv(r'F:\RISK\DATA\train\sherkati\sherkati_traindata.csv')
a = read1.loc[read1.LABEL == 1]


cols_ = config['with_facility_stacking_cols']+['LABEL','INTCUSTID']


d = get_random_sample(r'F:\RISK\DATA\train\\sherkati_over_under\train_0.csv', len(a), cols_)
e = pd.concat([a,d], axis=0)
e.to_csv(r'F:\RISK\DATA\train\sherkati_over_under\sample1.csv', index=False)

# %%% apply this create model


# =============================================================================
# =============================================================================


import sys 
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utilsV2 import *


    #print(f'number of row in dataset: {X.shape[0]}\nnumber of features in dataset: {X.shape[1]}')
    
    

rf = RandomForestClassifier(n_estimators=50,
                            class_weight='balanced',
                            criterion='gini',
                            max_features='sqrt',
                            max_depth=10,
                            max_leaf_nodes=20,
                            max_samples=None,
                            ccp_alpha=0,
                            min_samples_split=.1,
                            min_samples_leaf=3,
                            min_weight_fraction_leaf=0,
                            min_impurity_decrease=0,
                            bootstrap=True,
                            oob_score=False,
                            warm_start=False,                                
                            verbose=1)

xgb = XGBClassifier(n_estimators=20,
                    objective='binary:logistic',
                    booster='gbtree',
                    tree_method='hist',
                    subsample=0.6,
                    colsample_bytree=.8,
                    gamma=.5,
                    learning_rate=1,
                    max_depth=10,
                    min_child_weight=1,
                    reg_alpha=0,
                    reg_lambda=5,
                    enable_categorical=True)


model_name = '8'

#  CONFIG
config = {
    'out_path': r'F:\OUT\under_8segment\model2\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':f'F:\\RISK\\DATA\\train\\sherkati_over_under\\sample{model_name}.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}


cols_ = config['without_facility_stacking_cols'] 
X, y = get_Xy(df_path=config['train_dataset'],cols=cols_)  
print(X.shape,y.shape)




out_path = config['out_path']
title0 = 'sample1'


# =============================================================================
# logit
woe,scaler = fit_woe_encoder(X=X,y=y,model_name='oi',cat_cols=config['cat_cols'],
                                    out_path=out_path)
lgt = make_pipeline(woe, scaler, LogisticRegression(C=150,
                                                            penalty='l2',
                                                            solver='newton-cg',
                                                            max_iter=100000,
                                                            tol=1e-4,
                                                            multi_class='auto',                                                             
                                                            verbose=1))  


lgt.fit(X, np.ravel(y))

out_y = evaluate_solo(model=lgt, test_path=config['test_df'],smote=False,cols=cols_,out_path=config['out_path'])
get_metrics(y=out_y.y_test_org,y_pred=out_y['y_test_pred'],save_dir=config['out_path'],title=f'{model_name}_lll_REPORT_LoGIt_lll_')
joblib.dump(lgt, f'{out_path}/{model_name}_trainedModel_lg_.pkl')
# =============================================================================


# =============================================================================
# rf
rf.fit(X, np.ravel(y))

out_y = evaluate_solo(model=rf, test_path=config['test_df'],smote=False,cols=cols_,out_path=config['out_path'])
get_metrics(y=out_y.y_test_org,y_pred=out_y['y_test_pred'],save_dir=config['out_path'],
            title=f'_{model_name}_RRR_REPORT_RANDOMFOREST_RRR')
joblib.dump(rf, f'{out_path}/{model_name}_trainedModel_rf_.pkl')
# =============================================================================





# =============================================================================
# xgb

xgb.fit(X, np.ravel(y))

out_y = evaluate_solo(model=xgb, test_path=config['test_df'],smote=False,cols=cols_,out_path=config['out_path'])
get_metrics(y=out_y.y_test_org,y_pred=out_y['y_test_pred'],save_dir=config['out_path'],
            title=f'{model_name}_XXXX_REPORT_XGboost_XXXX_')
joblib.dump(xgb, f'{out_path}/{model_name}_trainedModel_xg_.pkl')
# =============================================================================











# %%% apply model 


base_dir = r'F:\OUT\aa\\'
rf_container = []
lg_container = []
xg_container = []

for i in range(1,9):
    rf = joblib.load(base_dir + f'{i}_trainedModel_rf_.pkl')
    rf_container.append(rf)
    lg = joblib.load(base_dir + f'{i}_trainedModel_lg_.pkl')
    lg_container.append(lg)
    xg = joblib.load(base_dir + f'{i}_trainedModel_xg_.pkl')
    xg_container.append(xg)

print(len(rf_container), len(lg_container), len(xg_container))





list_of_model = [rf_container[0], lg_container[0], xg_container[0],
                 rf_container[1], lg_container[1], xg_container[1],
                 rf_container[2], lg_container[2], xg_container[2],
                 rf_container[3], lg_container[3], xg_container[3],
                 rf_container[4], lg_container[4], xg_container[4],
                 rf_container[5], lg_container[5], xg_container[5],
                 rf_container[6], lg_container[6], xg_container[6],
                 rf_container[7], lg_container[7], xg_container[7],
                 ]


lr = LogisticRegression(random_state=255)



# =============================================================================
#  CONFIG
config = {
    'out_path': r'F:\OUT\\aa\\bb\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}
X, y = get_Xy(df_path=config['train_dataset'],cols=cols_)  

# =============================================================================

skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=255)
sclf = StackingCVClassifier(classifiers=list_of_model,
                            meta_classifier=lr,                             
                            use_probas=True,
                            cv=skf,
                            shuffle=True,
                            use_features_in_secondary=False,
                            store_train_meta_features=True,
                            n_jobs=1,
                            random_state=255,
                            verbose=1,)


sclf.fit(X, np.ravel(y))













#     # evaluate model 
out_y = evaluate(sclf=sclf, test_path=config['test_df'],smote=False,
                         cols=cols_,out_path=config['out_path'])
#      # get metrics
get_metrics(y=out_y.y_test_org,
            y_pred=out_y['y_test_pred_RF'],
            save_dir=config['out_path'],
            title='_REPORT_')









# %%%% stuff










asdf123547 =-






# %%  ERRORS >>
# =============================================================================
# =============================================================================
# %%% √√√ done with set load columns in specific order  to read csv √√√
# =============================================================================
#     The feature names should match those that were passed during fit.
#    Feature names must be in the same order as they were in fit.
#     
#  This is the case where the order of column-names while model building is
#  different from order of column-names while model scoring.
# =============================================================================
    

import pandas as pd

pred_path = r'F:\OUT\DS_Predict_Without_FCL_Sherkati_OBSERVATION_DATE_14020101__.csv'
train_path = r'F:\RISK\DATA\train\sherkati\sherkati_traindata.csv'

pred_df = pd.read_csv(df_path)
train_df = pd.read_csv(train_path)


df_path = r'F:\www_Without_FCL.csv'

# if find unsimilarity in two dataFrame it respond it
for i,j in enumerate(range(len(train_df.columns) - 1)): 
    cc = train_df.columns[i] == pred_df.columns[j]
    if cc == False:
        print(j, cc if cc == False else None)
        
# both features name stick together
list(zip(train_df.columns,pred_df.columns))


# check each features in both dataFrame 
for i,j in enumerate(range(len(train_df.columns)-1)): 
    print(j,train_df.columns[i] == pred_df.columns[i])



train_df = pd.read_csv(train_path)
# like in the pred function
cols = config['without_facility_stacking_cols']

data = pd.read_csv(pred_path, usecols=config['without_facility_stacking_cols']+['INTCUSTID'], header=0)
X = data.loc[:, config['without_facility_stacking_cols']]
y_pred_proba_ret = data.loc[:, ['INTCUSTID', 'CUSTGROUP', 'OBSERVATION_DATE']]
# preda['LABEL'] = 0
del train_df['LABEL']
cols_list = train_df.columns.to_list()
trainaX = train_df.loc[:, config['without_facility_stacking_cols']]
print(trainaX.columns == X.columns)


type(X)
# XX = X.values
XX = np.array(X)


MODEL.predict(trainaX.as_matr)





from risk_utilsV2 import *
predict2(file=pred_path, without_path=path_model_without, with_path=path_model_with, save_path='f:\\', config=config)
mmodel = joblib.load(path_model_without)


mmodel.predict(XX)


dir(mmodel.clfs_[0])

for i,j in enumerate(range(len(mmodel.clfs_[0].feature_names_in_)-1)): 
    print(j,train_df.columns[i] == pred_df.columns[i])


# will change order of Features and save new dataFrame 
import glob
import pandas as pd
traina = pd.read_csv(r'F:\RISK\DATA\train\sherkati\sherkati_traindata.csv')
del traina['LABEL']
cols_list = traina.columns.to_list()

bad_df = 'F:\\RISK\\DATA\\for_predict\\Sherkati\\Without_FCL\\*.csv'
for i in glob.glob(bad_df, recursive=True):
    save_ = i.split('\\')[-1].replace('.csv','__.csv')
    print(save_)
    preda = pd.read_csv(i)
    preda = preda[cols_list]
    
    # print(traina.columns == preda.columns)

    preda.to_csv('f:\\OUT\\' + save_, index=False)





# %%% ISSUE
# =============================================================================
# could not convert string to float: ''
# =============================================================================
   

# ==========================>>> inputs <<<=====================================
df_path2 = r'F:\RISK\DATA\predict\shakhsi_stress\\PERSONAL_CNTRCT_FEATURE_UNDER_STRESS_11_5_1_14020101.csv'
save_path = r'F:\RISK\DATA\predict\shakhsi_stress\\PERSONAL_CNTRCT_FEATURE_UNDER_STRESS_11_5_1_14020101_ok.csv'
# =============================================================================

# for single dataFrame 

a = pd.read_csv(df_path2)
b = a.select_dtypes(object)                  # see objects column
print(b)


for i in b:
    print('\n\n--------loop--------\n\n')
    a[i] = a[i].replace([''], '0')
    a[i] = a[i].astype(float)
    print(a.select_dtypes(object))

a.to_csv(save_path, index = False)



# for bunch  dataFrames
# ==========================>>> inputs <<<=====================================
df_path2 = r'F:\RISK\DATA\for_predict\Tejari\Without_FCL\*.csv'
save_path = r'F:\RISK\DATA\for_predict\Tejari\Without_FCL\tashih'
# =============================================================================

for i in glob.glob(df_path2):
    a = pd.read_csv(i)
    b = a.select_dtypes(object)                  # see objects column
    
    c = b.values
    # save_path = pred_result + i.split('\\')[-1].replace('.csv','__pred.csv')
    if len(c[0]) >= 1 :
        print('*' * 20,len(c[0]), i)
        for j in b:
            print('\n\n--------loop--------\n\n')
            a[j] = a[j].replace([''], '0')
            a[j] = a[j].astype(float)
            print(a.select_dtypes(object))
            
            a.to_csv(save_path + '\\' + i[-59:], index = False)


df_path = r'F:\www_Without_FCL.csv'



df_path2 = r'f:\sherkati_traindata_opti.csv'

predict2(file=df_path2,
     without_path=path_model_without,
     with_path=path_model_with,
     save_path='f:\\aaaa.csv',
     config=config)



a = pd.read_csv('F:\RISK\personal_models\DS_Predict_Without_FCL_OBSERVATION_DATE_14020101.csv', usecols=cols, header=0, nrows=10)

our_model = joblib.load('F:\RISK\personal_models\Personal_Stacking_Without_Facility.pkl')

a = a.fillna(0)
our_model.predict(a)

a.shape

a.values.shape




# *****************************************************************************
# *****************************************************************************
# stuff that i dont feel like to delete > > > 
# *****************************************************************************


a = r'F:\RISK\DATA\for_predict\Sherkati\Without_FCL\*.csv'



for i in glob.glob(a):
    a = pd.read_csv(i)
    print(a.dtypes.unique())                 # see all dtype
    
    a.select_dtypes(object)                  # see objects column
    
    
    a['CBI_CNTRCT_ASL_MAX_SUM_3Y'] = a['CBI_CNTRCT_ASL_MAX_SUM_3Y'].replace([''], '0')
    a.CBI_CNTRCT_ASL_MAX_SUM_3Y = a.CBI_CNTRCT_ASL_MAX_SUM_3Y.astype(float)
    a['CBI_CNTRCT_ASL_MAX_MAX_3Y'] = a['CBI_CNTRCT_ASL_MAX_MAX_3Y'].replace([''], '0')
    a.CBI_CNTRCT_ASL_MAX_MAX_3Y = a.CBI_CNTRCT_ASL_MAX_MAX_3Y.astype(float)


    a.to_csv(i, index = False)










# %% grid search by SARGOLI
# %%%random forest

import sys 
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utilsV2 import *
import pandas as pd
import pickle
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
import itertools
import time
from sklearn.metrics import classification_report
import itertools


# --------------------
# -------------------------------------------------------------------------------------
# --------------------


for i in range(2800,2805):
    print(i)


rf_params = {"max_depth": [1,3, None],
             "n_estimators": [10,100,250],
              "max_features": [2,8,11,40],
              "min_samples_split": [2,8,11,40],
              "min_samples_leaf": [2,8,11,40],
              "bootstrap": [True, False],
              "criterion": ["gini", "entropy","log_loss"]}


# =============================================================================
#  CONFIG
config = {
    'out_path': r'F:\OUT\\hyper\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}
cols_ = config['without_facility_stacking_cols'] 
X, y = get_Xy(df_path=config['train_dataset'],cols=cols_)  
Xt, yt = get_Xy(df_path=config['test_df'],cols=cols_)  

# =============================================================================



par = list(itertools.product(*list(rf_params.values())))
print(len(par))





cont = []
for i in range(0,len(par)):
    print(f' loop {i} start')
    rf_rf = RandomForestClassifier(max_depth = par[i][0],min_samples_split = par[i][3],
                                   min_samples_leaf = par[i][4],
                                   n_estimators=par[i][1],
                                   max_features=par[i][2],
                                   bootstrap=par[i][5],
                                   criterion=par[i][6],
                                   class_weight='balanced_subsample', n_jobs=-1, verbose = 0)
    f1_container = []
    for i in range(3):
        rf_rf.fit(X,  np.ravel(y))
    
        
        out_y = evaluate_solo(model=rf_rf, test_path=config['test_df'],smote=False,cols=cols_,out_path=config['out_path'])
    
        report = classification_report(out_y.y_test_org, out_y.y_test_pred, output_dict=True)
        f10 = report['0']['f1-score']
        f11 = report['1']['f1-score']
        f = (f10 + f11) / 2 
        f1_container.append(f11)
    
    f11_ = np.array(f1_container).mean()
    print(f'score: {f11_} loop {i} DONE\n\n****\n{par[i]}\n---------------')
    if f11 > 0.64:
        get_metrics(y=out_y.y_test_org,y_pred=out_y['y_test_pred'],save_dir=config['out_path'],
                    title=f'{f11_}____{i}___{par[i]}__rf_', plot=False)

            
    
    # joblib.dump(xgboost, f'{out_path}/{f11}_{model_name}_trainedModel_xg_.pkl')


# %%% XGboost

import pandas as pd
import pickle
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
import itertools
import time
from sklearn.metrics import classification_report
import itertools


# --------------------
# -------------------------------------------------------------------------------------
# --------------------







    

# =============================================================================
#  CONFIG
config = {
    'out_path': r'F:\OUT\\hyper_c2\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}
cols_ = config['without_facility_stacking_cols']

X, y = get_Xy(df_path=config['train_dataset'],cols=cols_)  
Xt, yt = get_Xy(df_path=config['test_df'],cols=cols_+['LABEL'])  

# =============================================================================




xgb_params = {'n_estimators': [20, 120, 200],
			  'objective': ['binary:logistic'],
			  'booster' : ['gbtree', 'dart'],
			  'tree_method': ['hist'],
			  'subsample': [.6, .8, 1],
			  'gamma': [.01, .5, 1.5, 5],
			  'learning_rate':[.01, .1, 1],
			  'max_depth': [3, 10,40],
			  'min_child_weight': [1, 2, 10, 40],
			  'reg_alpha': [0, 3],
			  'reg_lambda': [1, 3, 5]}




par = list(itertools.product(*list(xgb_params.values())))
print(len(par))



cont = []
for i in range(,len(par)):
    print(f' loop {i} start')
    
    xgboost = XGBClassifier(booster = par[i][2],
                        objective = par[i][1],
                        n_estimators = par[i][0],
                        tree_method = par[i][3],# 
                        reg_alpha = par[i][9],
                        gamma = par[i][5],
                        max_depth = par[i][7],
                        min_child_weight = par[i][8],
                        eval_metric = 'logloss',
                        subsample = par[i][4],
                        learning_rate = par[i][6],
                        reg_lambda = par[i][10],
                        n_jobs = -1)
    
    
    xgboost.fit(X,  np.ravel(y))
    
        



    
    
    out_y = evaluate_solo(model=xgboost, test_path=config['test_df'],smote=False,cols=cols_,out_path=config['out_path'])

    
    report = classification_report(out_y.y_test_org, out_y.y_test_pred, output_dict=True)
    f10 = report['0']['f1-score']
    f11 = report['1']['f1-score']
    f = (f10 + f11) / 2 
    
    
    
    get_metrics(y=out_y.y_test_org,y_pred=out_y['y_test_pred'],save_dir=config['out_path'],
                title=f'{f11}____{i}_____rf_')
        
            
    out_path = config['out_path']
    joblib.dump(xgboost, f'{out_path}/{f11}_{model_name}_trainedModel_xg_.pkl')


    
    

    print(f' loop {i} DONE')



# %%% logit
# ╥╥╥╥╥╥╥╥╥╥╥╥╥╥   
#  ╥╥╥╥╥╥╥╥╥╥╥╥╥╥   some parameters cant compatible with other 
# ╚╩╩╩╩╩╩╩╩╩╩╩╩╩   we must use standard gridSearch or try: try&except
# ╩╩╩╩╩╩╩╩╩╩╩╩╩╩

import sys 
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utilsV2 import *
import pandas as pd
import pickle
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
import itertools
import time
from sklearn.metrics import classification_report
import itertools

# ╥╥╥╥╥╥╥╥╥╥╥╥╥╥          
# ╥╥╥╥╥╥╥╥╥╥╥╥╥╥            GRID  
# ╥╥╥╥╥╥╥╥╥╥╥╥╥╥                    SEARCH
# ╥╥╥╥╥╥╥╥╥╥╥╥╥╥   

from sklearn.model_selection import GridSearchCV


#  CONFIG
config = {
    'out_path': r'F:\OUT\\hyper\hyper_lg\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}


cols_ = config['without_facility_stacking_cols'] 

X, y = get_Xy(df_path=config['train_dataset'],cols=cols_)  
Xt, yt = get_Xy(df_path=config['test_df'],cols=cols_)  
model_name = 'lg'
out_y = config['out_path']
# =============================================================================



woe_encoder,scaler = fit_woe_encoder(X=X,
                                     y=np.ravel(y),
                                     model_name=model_name,
                                     cat_cols=config['cat_cols'],
                                    out_path=config['out_path'])

lgt_params = {
    'penalty': ['l1', 'l2', 'elasticnet'],
    'dual': [True, False],
    'C': np.logspace(-4, 4, 10),
    'fit_intercept': [True, False],
    'solver': ['lbfgs', 'liblinear', 'newton-cg', 'newton-cholesky', 'sag', 'saga'],
    'max_iter': [100,2,40,200],
    'multi_class': ['auto', 'ovr'],
    'warm_start': [True, False],
    'class_weight': [None, 'balanced']}

a = GridSearchCV(estimator=LogisticRegression(), param_grid=lgt_params,
                 scoring='roc_auc', n_jobs=-1, refit=True,cv=5, verbose=3)
a.fit(X,y)






# ╥╥╥╥╥╥╥╥╥╥╥╥╥╥   TRy
# ╥╥╥╥╥╥╥╥╥╥╥╥╥╥        &
# ╥╥╥╥╥╥╥╥╥╥╥╥╥╥            Except
# ╥╥╥╥╥╥╥╥╥╥╥╥╥╥    F        A I       Led
lgt_params = {
    'penalty': ['l1', 'l2', 'elasticnet'],
    'dual': [True, False],
    'C': np.logspace(-4, 4, 10),
    'fit_intercept': [True, False],
    'solver': ['lbfgs', 'liblinear', 'newton-cg', 'newton-cholesky', 'sag', 'saga'],
    'max_iter': [100,2,40,200],
    'multi_class': ['auto', 'ovr'],
    'warm_start': [True, False],
    'class_weight': [None, 'balanced']}


 
par = list(itertools.product(*list(lgt_params.values())))
print(len(par))


#  CONFIG
config = {
    'out_path': r'F:\OUT\\hyper\hyper_lg\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}


cols_ = config['without_facility_stacking_cols'] 

X, y = get_Xy(df_path=config['train_dataset'],cols=cols_)  
Xt, yt = get_Xy(df_path=config['test_df'],cols=cols_)  
model_name = 'lg'
out_y = config['out_path']
# =============================================================================



lgt_params = {
    'penalty': ['l1', 'l2', 'elasticnet'],
    'dual': [True, False],
    'C': np.logspace(-4, 4, 10),
    'fit_intercept': [True, False],
    'solver': ['lbfgs', 'liblinear', 'newton-cg', 'newton-cholesky', 'sag', 'saga'],
    'max_iter': [100,2,40,200],
    'multi_class': ['auto', 'ovr'],
    'warm_start': [True, False],
    'class_weight': [None, 'balanced']}



cont = []
for i in range(2000,len(par)):
    try:
        print(i,par[i])
        print(f' loop {i} start')
        woe_encoder,scaler = fit_woe_encoder(X=X,
                                             y=np.ravel(y),
                                             model_name=model_name,
                                             cat_cols=config['cat_cols'],
                                            out_path=config['out_path'])
        rf_rf = make_pipeline(woe_encoder, scaler, LogisticRegression(penalty=par[i][0],
                                                                      dual=par[i][1],
                                                                      C=par[i][2],
                                                                      fit_intercept=par[i][3],
                                                                      solver=par[i][4],
                                                                      max_iter=par[i][5],
                                                                      multi_class=par[i][6],
                                                                      warm_start=par[i][7],
                                                                      class_weight=par[i][8],
                                                                      verbose=1))  
        
        
        
        rf_rf.fit(X,  np.ravel(y))
        
            
    
    
    
        
        
        
        out_y = evaluate_solo(model=rf_rf, test_path=config['test_df'],smote=False,cols=cols_,out_path=config['out_path'])
        report = classification_report(out_y.y_test_org, out_y.y_test_pred, output_dict=True)
        f10 = report['0']['f1-score']
        f11 = report['1']['f1-score']
        f = (f10 + f11) / 2 
        
        
        
        print(f'score: {f11} loop {i} DONE\n\n****\n{par[i]}\n---------------')
        if f11 > 0.64:
            get_metrics(y=out_y.y_test_org,y_pred=out_y['y_test_pred'],save_dir=config['out_path'],
                        title=f'{f11}____{i}___{par[i]}__lg_', plot=False)
    except:
        print('>>>> --- the following parameter set:')
        print('\n',par[i],'\n')
        print('are not supported\n')
    
    # joblib.dump(xgboost, f'{out_path}/{f11}_{model_name}_trainedModel_xg_.pkl')


# %%%%
from sklearn.model_selection import GridSearchCV

# =============================================================================
#  CONFIG
config = {
    'out_path': r'F:\OUT\\hyper_lg\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}
cols_ = config['without_facility_stacking_cols'] 

X, y = get_Xy(df_path=config['train_dataset'],cols=cols_)  
Xt, yt = get_Xy(df_path=config['test_df'],cols=cols_)  
model_name = 'lg'
out_y = config['out_path']
# =============================================================================


lgt_params = {
        'warm_start': [True, False],
        'dual': [False],
        'fit_intercept': [True, False],
        'intercept_scaling': [1,10,15],
        'max_iter': [2,40,200],
        'class_weight': [None, 'balanced'],
        'solver': ['liblinear', 'newton-cg', 'newton-cholesky', 'sag'], # 'lbfgs', 'saga'
        'penalty': ['l1', 'l2'],
        'C': [0.1,10,100]}

woe_encoder,scaler = fit_woe_encoder(X=X,
                                     y=np.ravel(y),
                                     model_name=model_name,
                                     cat_cols=config['cat_cols'],
                                    out_path=config['out_path'])
modell = make_pipeline(woe_encoder, scaler, LogisticRegression()) 


hyper_params_selection_by_randomizedsearchcv(model=LogisticRegression(),
                                                 param_dists=lgt_params,
                                                 X=X, y=y, n=10)




#%%% hyper parameter Test  ♦♦♦

# ----    >>>>  test hyper  <<<<
import sys 
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *


logistic_params = {'C': 0.0001,
                   'class_weight': 'balanced',
                   'dual' : False,
                   'fit_intercept': True,
                   'max_iter' : 40,
                   'multi_class' : 'auto',
                   'penalty' : 'l2',
                   'solver':'newton-cholesky',
                   'warm_start':True
                   }

rf_params = {"max_depth": None,
             "n_estimators":250,
              "max_features": 11,
              "min_samples_split": 8,
              "min_samples_leaf": 2,
              "bootstrap": True,
              "criterion": 'log_loss'}




xgb_params = {'n_estimators': 300,
			  'objective': 'binary:logistic',
			  'booster' : 'gbtree',
			  'tree_method': 'hist',
			  'subsample': .8,
			  'gamma': .01,
			  'learning_rate':.1,
			  'max_depth': 40,
			  'min_child_weight': 10,
			  'reg_alpha': 0,
			  'reg_lambda': 3}


par1 = [None,rf_params,None]



# =============================================================================
#  CONFIG
config = {
    'out_path': r'F:\OUT\\test_\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}


# config['without_facility_stacking_cols'] use this for change model to NoFacility features
cols_ = config['without_facility_stacking_cols'] 
model_saved_name = 'sherkati_without_'    
X_train, y_train = get_Xy(df_path=config['train_dataset'],cols=cols_)  
X_test, y_test = get_Xy(df_path=config['test_df'],cols=cols_)  




rf = RandomForestClassifier(**par1[1])

rf.fit(X_train,np.ravel(y_train))
y_pred = rf.predict(X_test)

X_test, y_test = get_Xy(df_path=config['test_df'],
                          cols=cols_)
report = classification_report(y_test, y_pred, output_dict=True)
f10 = report['0']['f1-score']
f11 = report['1']['f1-score']
print(f11)

# —————————————————————————————————————————————————————————————————————————————
#  Train model
MODEL = train_model(X=X_train,y=y_train,cat_cols=config['cat_cols'],smote=True,
                    model_name=model_saved_name, params=par1,
                    out_path=config['out_path']) # please use "/" forwardslash for directory    


# evaluate model 
out_y = evaluate(sclf=MODEL, test_path=config['test_df'],smote=False,
                         cols=cols_,out_path=config['out_path'])

report = classification_report(out_y.y_test_org, out_y.y_test_pred, output_dict=True)
f10 = report['0']['f1-score']
f11 = report['1']['f1-score']
print(f11)

get_metrics(y=out_y.y_test_org, y_pred=out_y['y_test_pred'],
            save_dir=config['out_path'],plot=False)

    
difference between stacking and random forest
    
# %%%% ---->>>> stuff <<<<




kfold = KFold(n_splits=5, random_state=255, shuffle = True)
results = cross_val_score(MODEL, X_test, y_test, cv=kfold)

# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————



xgb = XGBClassifier(**xgb_params)

svc = sklearn.svm.SVC(random_state=255)

skf = StratifiedKFold(n_splits=50, shuffle=True, random_state=255)
sclf = StackingCVClassifier(classifiers=[xgb], # 
                            meta_classifier=svc,                             
                            use_probas=True,
                            cv=skf,
                            shuffle=True,
                            use_features_in_secondary=False,
                            store_train_meta_features=True,
                            n_jobs=-1,
                            random_state=255,
                            verbose=1,)




sclf.fit(X_train,np.ravel(y_train))









# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————
# —————————————————————————————————————————————————————————————————————————————



#      # get metrics
    get_metrics(y=out_y.y_test_org,
                y_pred=out_y['y_test_pred_RF'],
                save_dir=config['out_path'],
                title='_REPORT_RF')

















cols_ = config['without_facility_stacking_cols'] 

path_train = config['train_dataset']
path_test = config['test_df']

x_train, y_train = get_Xy(df_path=path_train,
                          cols=cols_)  

x_test, y_test = get_Xy(df_path=path_test,
                          cols=cols_)  





























woe_encoder,scaler = fit_woe_encoder(X=x_train,
                                     y=y_train,
                                     model_name='oooo',
                                     cat_cols=config['cat_cols'])


logistic_params = {'C': 0.9181798324965569,
                   'intercept_scaling': 3.79269887117177,
                   'max_iter' : 40,
                   'multi_class': 'ovr',
                   'penalty' : 'l2',
                   'solver' : 'liblinear',
                   'tol' : 0.0004106762983081536,
                   }




lgt = make_pipeline(woe_encoder, scaler, LogisticRegression(**logistic_params))  


random_params = {
    'bootstrap':False,
    'criterion':'entropy',
    'max_depth':None,
    'max_features':4,
    'min_samples_leaf':2,
    'min_samples_split':7,
    'n_estimators':250
    }

rf = RandomForestClassifier(**random_params)


xg_params = {
    'booster':'dart',
    'colsample_bytree':0.6,
    'enable_categorical':True,
    'gamma':0.01,
    'learning_rate':0.5,
    'max_depth':40,
    'min_child_weight':2,
    'n_estimators':80,
    'objective':'binary:logistic',
    'reg_alpha':0,
    'reg_lambda':3,
    'subsample':0.6,
    'tree_method':'hist'
    }

xgb = XGBClassifier(**xg_params)

lr = LogisticRegression(random_state=255)

skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=255)
sclf = StackingCVClassifier(classifiers=[rf, xgb, lgt],
                            meta_classifier=lr,                             
                            use_probas=True,
                            cv=skf,
                            shuffle=True,
                            use_features_in_secondary=False,
                            store_train_meta_features=True,
                            n_jobs=1,
                            random_state=255,
                            verbose=1)


sclf.fit(x_train, np.ravel(y_train))




sclf.score(x_test, y_test)
# =============================================================================
# xg_params = {
#     'booster':'gbtree',
#     'gamma':0.01,
#     'learning_rate':1,
#     'max_depth':40,
#     'min_child_weight':1,
#     'n_estimators':120,
#     'objective':'binary:logistic',
#     'reg_alpha':0,
#     'reg_lambda':5,
#     'subsample':0.8,
#     'tree_method':'hist'
#     }
# =============================================================================
















# %%% all models


import sys 
sys.path.insert(0,r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utilsV2 import *
import pandas as pd
import pickle
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
import itertools
import time
from sklearn.metrics import classification_report
import itertools


# --------------------
# -------------------------------------------------------------------------------------
# --------------------




xgb_params = {'n_estimators': [20, 120, 200],
			  'objective': ['binary:logistic'],
			  'booster' : ['gbtree', 'dart'],
			  'tree_method': ['hist'],
			  'subsample': [.6, .8, 1],
			  'gamma': [.01, .5, 1.5, 5],
			  'learning_rate':[.01, .1, 1],
			  'max_depth': [3, 10,40],
			  'min_child_weight': [1, 2, 10, 40],
			  'reg_alpha': [0, 3],
			  'reg_lambda': [1, 3, 5]}


# =============================================================================
# 
# rf_params = {"max_depth": [1,3, None],
#              "n_estimators": [10,100,250],
#               "max_features": [2,8,11,40],
#               "min_samples_split": [2,8,11,40],
#               "min_samples_leaf": [2,8,11,40],
#               "bootstrap": [True, False],
#               "criterion": ["gini", "entropy","log_loss"]}
# 
# =============================================================================

# =============================================================================
#  CONFIG
config = {
    'out_path': r'F:\OUT\\hyper\\all\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\sherkati\\sherkati_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\sherkati\sherkati_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}
cols_ = config['without_facility_stacking_cols'] 
X, y = get_Xy(df_path=config['train_dataset'],cols=cols_)  
Xt, yt = get_Xy(df_path=config['test_df'],cols=cols_)  

# =============================================================================



par_rf = list(itertools.product(*list(rf_params.values())))
par_xg = list(itertools.product(*list(xgb_params.values())))

print(len(par_xg))


# =============================================================================
# 
#     
#     get_metrics_all(y=out_y,
#                 save_dir=config['out_path'],plot=False
#                 )
#     
#     
# =============================================================================
    
    


rf_params = {"max_depth": None,
                  "n_estimators": 100,
                  "max_features": 8,
                   "min_samples_split": 40,
                   "min_samples_leaf": 2,
                   "bootstrap": False,
                   "criterion": 'entropy'}

cont = []
for i in range(0,len(par_rf)):
    print(f' loop {i} start')
    
    
    xgb_params = {'n_estimators': par_xg[i][0],
    			  'objective': par_xg[i][1],
    			  'booster' : par_xg[i][2],
    			  'tree_method': par_xg[i][3],
    			  'subsample': par_xg[i][4],
    			  'gamma': par_xg[i][5],
    			  'learning_rate':par_xg[i][6],
    			  'max_depth': par_xg[i][7],
    			  'min_child_weight': par_xg[i][8],
    			  'reg_alpha': par_xg[i][9],
    			  'reg_lambda': par_xg[i][10]}


    
# =============================================================================
#     rf_params = {"max_depth": par_rf[i][0],
#                  "n_estimators": par_rf[i][1],
#                   "max_features": par_rf[i][2],
#                   "min_samples_split": par_rf[i][3],
#                   "min_samples_leaf": par_rf[i][4],
#                   "bootstrap": par_rf[i][5],
#                   "criterion": par_rf[i][6]}
# =============================================================================

    par_par = [None,rf_params,xgb_params]    
    #  Train model
    MODEL = train_model(X=X_train,y=y_train,cat_cols=config['cat_cols'],smote=True,
                        model_name=model_saved_name, params=par_par,
                        out_path=config['out_path']) # please use "/" forwardslash for directory   
    
    

    # evaluate model 
    out_y = evaluate(sclf=MODEL, test_path=config['test_df'],smote=False,
                             cols=cols_,out_path=config['out_path'])
    
    # get metrics
    report = classification_report(out_y.y_test_org, out_y.y_test_pred, output_dict=True)
    f10 = report['0']['f1-score']
    f11 = report['1']['f1-score']
    f = (f10 + f11) / 2 
    print(f11)
    print(f'score: {f11} loop {i} DONE\n\n****\n{par[i]}\n---------------')
    if f11 > 0.64:
        get_metrics(y=out_y.y_test_org,y_pred=out_y['y_test_pred'],save_dir=config['out_path'],
                    title=f'{f11}____{i}___{par[i]}__rf_', plot=False)

            
    
    # joblib.dump(xgboost, f'{out_path}/{f11}_{model_name}_trainedModel_xg_.pkl')




# %% RFECV ranking features
#  CONFIG

config = {
    'out_path': r'F:\OUT\\rfecv\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\small\small_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\small\small_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}

cols_ = config['with_facility_stacking_cols'] 

X_train, y_train = get_Xy(df_path=config['train_dataset'],cols=cols_) 



model = train_model(X=X_train,y=y_train,cat_cols=config['cat_cols'],smote=True,
                    model_name='model_saved_name', params=[None,None,None],
                    out_path=config['out_path']) # please use "/" forwardslash for directory    

# =============================================================================
# model = joblib.load(r'F:\RISK\train_result_stk\small_with\small_with.pkl')
# =============================================================================


 
print('shape of data:',X_train.shape,y_train.shape)

 

# =============================================================================
# rf_cv = feature_selection_by_rfecv(model=model, X=X_train, y=y_train)
# =============================================================================

skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=255)


rfecv = RFECV(estimator=model,
              min_features_to_select=100,
              scoring='roc_auc',
              cv=skf,step=100,
              n_jobs=2,
              verbose=3)


rfecv.fit(X_train, np.ravel(y_train))    
sorted_idxs = rfecv.ranking_.argsort()
sorted_feats = X.columns[sorted_idxs]
sorted_ranks =  rfecv.ranking_[sorted_idxs]   
return rfecv, zip(sorted_feats, sorted_ranks)






# =============================================================================
# 
# 
# import pandas as pd
# df = pd.read_csv(config['train_dataset'])
# df.loc[df.LABEL == 0]
# 
# 
# =============================================================================



# %%  stats of pds from small biz 
#  CONFIG

config = {
    'out_path': r'F:\OUT\\rfecv\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'F:\RISK\DATA\train\small\small_traindata.csv',
    
    # for evaluate
    'test_df': r'F:\RISK\DATA\train\small\small_testdata.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}

model = joblib.load(r'F:\RISK\train_result_stk\small_without\small_without.pkl')

out_y = evaluate(sclf=model, test_path=config['test_df'],smote=False,
                         cols=config['without_facility_stacking_cols'],out_path=config['out_path'])


get_metrics_all(y=out_y,
            save_dir=config['out_path'],plot=True
            )
get_model_feat_imps(sclf=model, save_path=config['out_path'], cols=config['without_facility_stacking_cols'])









df = pd.read_csv(r'F:\RISK\DATA\train\small\small_testdata.csv')


listt = list(df.OBSERVATION_DATE.unique())


csvv = pd.DataFrame(columns=['non_default','default','avg_nokol'])

for i in range(len(listt)):
    df_sample = df.loc[df.OBSERVATION_DATE == listt[i]]
    
    csvv.at[listt[i],'non_default'] = [len(df_sample.loc[df.LABEL == 0])]
    csvv.at[listt[i],'default'] = [len(df_sample.loc[df.LABEL == 1])]
    csvv.at[listt[i],'avg_nokol'] = [len(df_sample.loc[df.LABEL == 1])/len(df_sample)]

    



csvv.to_csv(r'f:\smallb_pd_stats_of_train_data_.csv')







len(df.loc[df.LABEL == 0])/len(df.loc[df.LABEL == 1])



# %% BarChart of  predicted data with Fcl

# =============================================================================
# for one dataset
df = pd.read_csv(r'F:\RISK\pred_result\small\with\DS_Predict_With_FCL_Small_biz_OBSERVATION_DATE_14011001__pred.csv')


def addlabels(x,y):
    for i in range(len(x)):
        plt.text(i, y[i], y[i], ha = 'center',alpha =.8)
        
d = {}
for i in range(10):
    cust = round(i*0.1, 2)
    count = len(df.PD.loc[(df.PD > cust) & (df.PD < cust+0.1)])
    print(cust,' : ',count)
    d[str(cust)] = count



plt.figure(figsize = (10,5))

plt.bar(x = d.keys(), height=d.values(), width=0.8, bottom=None, align='center', data=None)
addlabels(d.keys(),list(d.values()))
# =============================================================================









# =============================================================================
def bar_pd(path, n, save_path):
    df = pd.read_csv(path)
    d = {}
    for i in range(n):
        cust = round(i*0.1, 2)
        count = len(df.PD.loc[(df.PD > cust) & (df.PD < cust+0.1)])
        print(cust,' : ',count)
        d[str(cust)] = count
    plt.figure(figsize = (10,5))
    
    plt.bar(x = d.keys(), height=d.values(), width=0.8, bottom=None, align='center', data=None)
    addlabels(d.keys(),list(d.values()))
    
    plt.savefig(fname=save_path + '_pd_stats_', bbox_inches='tight')
# =============================================================================




# =============================================================================

pathh = r'F:\RISK\pred_result\small\with\DS_Predict_With_FCL_Small_biz_OBSERVATION_DATE_14010701__pred.csv'


for i in glob.glob(r'F:\RISK\pred_result\small\with\*.*'):
    print(i[-18:-10])
    bar_pd(i,
           10,
           'f:\\OUT\\pd_stats\\' + str(i[-18:-10]))
# =============================================================================



import numpy as np
import time



while True:
    random_integer = [np.random.randint(100),np.random.randint(100)]
    
    t = np.random.randint(3,5)
    print(t)
    time.sleep(t)
    print(random_integer)
    





# %% check data that has been lost 
'''
23/5/1402
encounter with a problem that new data is lower { in numbers } than old data
■ check whats data has been lost 

'''


import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *
import pandas as pd


# ==========================>>> inputs <<<=====================================
old_dataset = r'F:\tstuff\new_data\Custgroup_1_Year_1397_Lable_0_Without_FCL.csv'
new_dataset = r'e:\DS_Custgroup_1_Year_1397_Lable_0_5063531.csv'
# =============================================================================


old_ = pd.read_csv(old_dataset, usecols=['INTCUSTID', 'LABEL', 'OBSERVATION_DATE'], header=0,encoding='utf-8') #, chunksize=2000000)
new_ = pd.read_csv(new_dataset, usecols=['INTCUSTID', 'LABEL', 'OBSERVATION_DATE'], header=0,encoding='utf-8')
# ,delimiter='\r\n'
a = old_.merge(new_, how='outer', indicator=True).loc[lambda x: x['_merge'] == 'right_only']

# 548633
# 17

c = []


old0 = pd.read_csv(old_dataset, usecols=['INTCUSTID', 'LABEL', 'OBSERVATION_DATE'], header=0,encoding='utf-8', chunksize=1000000)
new0 = pd.read_csv(new_dataset, usecols=['INTCUSTID', 'LABEL', 'OBSERVATION_DATE'], header=0,encoding='utf-8',  chunksize=1000000)


for o, n in zip(old0, new0):
    
    print('-' * 20, '\n',o.shape)
    process_chunk(o, n)





# ----------------------------------------------------------------------------
# Function to process each data chunk
def process_chunk(chunk1, chunk2):
    
    combine = chunk1.merge(chunk2, how='outer', indicator=True).loc[lambda x: x['_merge'] == 'right_only']

    #print('in_oldData_andnotin_newData:\n', in_oldData_andnotin_newData)
    #print()
    #print('in_newData_andnotin_oldData:\n', in_newData_andnotin_oldData)
    
    c.append(combine)
# ----------------------------------------------------------------------------












b = pd.concat(c, ignore_index=True)
combined_df_newNotOld = pd.concat(in_newData_andnotin_oldData_df, ignore_index=True)
 

# =============================================================================
# =============================================================================
# =============================================================================
# =============================================================================
# =============================================================================



# =============================================================================
# =============================================================================
# =============================================================================

















# %%%%%



filename = r'e:\DS_Custgroup_1_Year_1397_Lable_0_5063531.csv'
problematic_line_number = 5063531  # Replace with the actual line number

# Read the lines from the original file and correct the problematic line
with open(filename, 'r', encoding='utf-8') as file:
    lines = file.readlines()

# Correct the problematic line
corrected_line = lines[problematic_line_number - 1].replace('\\', '"\\')  # Replace double quotes

# Update the corrected line in the lines list
lines[problematic_line_number - 1] = corrected_line

# Write the corrected lines back to the file
with open(filename, 'w', encoding='utf-8') as file:
    file.writelines(lines)

print(f"Line {problematic_line_number} corrected.")



In this code, we read the lines of the CSV file into a list, correct the problematic line by removing double quotes (") if that's the issue, and then write the corrected lines back to the file. Make sure to replace 'your_file.csv' with the actual file name and adjust the problematic line number accordingly.

Keep in mind that this approach directly modifies the file, so make sure you have a backup of the original file before making any changes. If the issue is more complex or involves malformed data, you might need to perform additional data cleaning or adjustments to ensure the correctness of the CSV file.



'''
lines[problematic_line_number - 1]
Out[14]: '27042020,13970101,17,13940625,0.00,3223.00,0.00,3223.00,63161.00,82010.00,0.00,100000000.00,,100000000.00,,,22073019.00,0.00,22073019.00,0.00,,,,,,,,,0,0,0,0,0,0,0,0,0,0,,,,,,,,,,,,,,,0.00,0.00,1,1,0.00,100000000.00,100000000.00,100000000.00,100000000.00,100000000.00,,,,,,1,1,1,1,1,,,,,,,,,,,,,,,,,,,68043202.00,136493256.00,,,,,68043202.00,136493256.00,68043202.00,136493256.00,,,,,,,0.00,0.00,0.00,0.00,,,,,,,,,0.00,0.00,0.00,0.00,,,,,,,,,4100000.00,4258243.00,53300000.00,122682807.00,4100000.00,4089426.90,,,,,,,,,,,,,,,,,,,,,,,,,24557740.00,3600405.22,,2146158.52,24557740.00,,3600405.22,2146158.52,,21026055.21,,21026055.21,24557740.00,3255250.88,,2169849.77,24557740.00,,3255250.88,2169849.77,,21026055.21,,21026055.21,24557740.00,4683345.34,,751331.44,24557740.00,,4683345.34,751331.44,,2708054.03,,2708054.03,83,83,0,420475758.00,420475758.00,0.00,183,183,0,422445974.00,422445974.00,0.00,52,52,0,299516680.00,299516680.00,0.00,106,106,0,285598968.00,285598968.00,0.00,29,29,0,179167879.00,179167879.00,0.00,50,50,0,177808137.00,177808137.00,0.00,0,,0,,0,,0,,,0,,0,0,0,1,0,,,0.000,,0,,,0.000,13930707,0,312,13691008,1,,,,,,,,,,,,,,,,0\n'

lines[problematic_line_number - 2]
Out[15]: '"27041943","13970401","17","13950409","173473.00","253953.00","173473.00","253953.00","2744145.00","5054710.00","0.00","70000000.00",,"70000000.00",,,"35395022.00","0.00","35395022.00","0.00",,,,,,,,,"2","4","2","4","1","1","0","0","0","0","74009792.00","182306000.00","74009792.00","182306000.00","63906632.00","76598051.00",,,,,,"70000000.00","70000000.00","70000000.00","0.00","0.00","1","1","0.00","70000000.00","70000000.00","70000000.00","70000000.00","70000000.00",,,,,,"1","1","1","1","1",,,,,,,,,,,,,,,,,,,"65088615.00","94634950.00",,,,,"65088615.00","94634950.00","65088615.00","94634950.00",,,,,,,"0.00","0.00","0.00","0.00",,,,,,,,,"0.00","0.00","0.00","0.00",,,,,,,,,"2838000.00","2931130.00","35023912.00","64145542.00","1459329.67","1457853.24",,,,,,,,,,,,,,,,,,,,,,,,,"230653.00","80659.33","80659.33","96106.46",,"230653.00",,,"96106.46",,"351251.77","351251.77","230653.00","119653.00","119653.00","103009.91",,"230653.00",,,"103009.91",,"230233.64","230233.64","230653.00","158653.00","158653.00","152295.39",,"230653.00",,,"152295.39",,"230233.64","230233.64","22","0","22","37553000.00","0.00","37553000.00","70","0","70","37553000.00","0.00","37553000.00","11","0","11","17333000.00","0.00","17333000.00","35","0","35","17333000.00","0.00","17333000.00","5","0","5","10500000.00","0.00","10500000.00","15","0","15","10500000.00","0.00","10500000.00","0",,"0",,"0",,"0",,,"0",,"0","0","0","2","0",,,"0.000",,"0",,,"0.000","13930708","1","414","13601007","2","1","82000000","82000000","54734856","0","0","0",,,,,,,,,"0"\n'

'''



line = lines[problematic_line_number - 1]
corrected_line = line.replace('"', '')  # Escape double quotes
lines[line_number - 1] = corrected_line









# %%% how many data exist for each observation date

import pandas as pd

# ==========================>>> inputs <<<=====================================
old_dataset = r'F:\tstuff\new_data\Custgroup_1_Year_1398_Lable_0_Without_FCL.csv'
new_dataset = r'e:\DS_Custgroup_1_Year_1398_Lable_0_7945357.csv'
# =============================================================================

# Function to process each data chunk
def process_chunk(chunk):

    data = chunk.get_chunk()
    print(data)
    
    
    
for i in range(1,300001,100000):
    print(i)
    old_ = pd.read_csv(old_dataset, usecols=['INTCUSTID', 'LABEL', 'OBSERVATION_DATE'], header=0, chunksize=i)
    process_chunk(old_)



# %% evaluate chunk chunk

# load dependencies 
# libraries
import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *


# model
path = 'F:\RISK\RISK_old_personal\personal_models\Personal_Stacking_Without_Facility.pkl'
model = joblib.load(path)












# cols that we need 
config = {
    'out_path': r'E:\new_data_shahrivar_1402\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'E:\new_data_shahrivar_1402\small-biz\train.csv',
    
    # for evaluate
    'test_df': r'E:\new_data_shahrivar_1402\small-biz\test.csv',
    #BIRTHDATE
    # needed columns                
    'without_facility_stacking_cols': [ 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}

cols_ = config['without_facility_stacking_cols'] 


pos_p = r'E:\new_data_shahrivar_1402\shakhsi\DS_Custgroup_1_Year_1400_Lable_1_1338991.csv'
neg_p = r'E:\new_data_shahrivar_1402\shakhsi\DS_Custgroup_1_Year_1400_Lable_0_19802476.csv'



y_test, y_test_pred, y_test_pred_RF, y_test_pred_XGB, y_test_pred_LOGIT, y_test_proba = evaluate_(sclf=model, cols=cols_, pos_path=pos_p, neg_path=neg_p)



sample_df = pd.DataFrame(columns=['y_test_pred_RF', 'y_test_pred_XGB ', 'y_test_pred_LOGIT ','y_test_org', 'y_test_pred'])



sample_df['y_test_pred_RF'] = y_test_pred_RF
sample_df['y_test_pred_XGB '] = y_test_pred_XGB
sample_df['y_test_pred_LOGIT '] = y_test_pred_LOGIT
sample_df['y_test_org'] = y_test
sample_df['y_test_pred'] = y_test_pred

sample_df.to_csv('E:\shakhsi_with_1400.csv', index=False)




get_metrics_all(y=sample_df,
            save_dir=config['out_path'],plot=True
            )



get_model_feat_imps(sclf=model, save_path=config['out_path'], cols=cols_)






# %% sherkati hyper tune



import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *




#  CONFIG
config = {
    'out_path': r'E:\HYPER\sherkati\try6\\',            # models and data are saved in that folder

    # for train 
    'train_dataset':r'E:\new_data_shahrivar_1402\sherkati\sher_train2.csv',
    
    # for evaluate
    'test_df': r'E:\new_data_shahrivar_1402\sherkati\sher_test.csv',
    
    # needed columns                
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}




# ==========================>>> inputs <<<=====================================
cols_ = config['with_facility_stacking_cols'] 
model_saved_name = 'sherkati_withFCL_shahriver402_hyper'
# =============================================================================




# load data
X_train, y_train = get_Xy(df_path=config['train_dataset'],cols=cols_)  
print('shape of data:',X_train.shape,y_train.shape)


# [CV 2/3] END C=0.01, class_weight=None, max_iter=1000, multi_class=auto, penalty=l1,
#   solver=liblinear, warm_start=False;, score=0.954 total time=34.1min  /*/*/*/6



lg_params = {'C': 0.01,
             'class_weight':None,
             'max_iter':1000,
             'multi_class':'auto',
             'penalty':'l1',
             'solver':'liblinear',
             'warm_start':False
             } 


# [CV 2/3] END bootstrap=False, class_weight=balanced, criterion=entropy, max_depth=10,
# max_features=sqrt, min_samples_leaf=5, min_samples_split=5, n_estimators=800;, score=0.990 total time= 1.8min /*/*/*/ 6


rf_params = {
    'bootstrap':False,
    'class_weight':'balanced',
    'criterion':'entropy',
    'max_depth':10,
    'max_features':'sqrt',
    'min_samples_leaf':5,
    'min_samples_split':5,
    'n_estimators':800,
    }


# [CV 2/3] END booster=gbtree, gamma=1, learning_rate=0.1, max_depth=10, 
# min_child_weight=1, n_estimators=300, reg_alpha=0, reg_lambda=1, subsample=0.5, tree_method=exact;, score=0.990 total time= 1.1min /*/*//6

xg_params = {
    'booster':'gbtree',
    'gamma':1,
    'learning_rate':0.1,
    'max_depth':10,
    'min_child_weight':1,
    'n_estimators':300,
    'reg_alpha':0,
    'reg_lambda':1,
    'subsample':0.5,
    'tree_method':'exact',
    }










#  Train model
MODEL = train_model(X=X_train,y=y_train,cat_cols=config['cat_cols'],smote=True,
                    model_name=model_saved_name, params=[lg_params,rf_params,xg_params],
                    out_path=config['out_path']) # please use "/" forwardslash for directory    


# evaluate model 
out_y = evaluate(sclf=MODEL, test_path=config['test_df'],smote=False,
                         cols=cols_,out_path=config['out_path'])


get_metrics_all(y=out_y,
            save_dir=config['out_path'],plot=True
            )

get_model_feat_imps(sclf=MODEL, save_path=config['out_path'], cols=cols_)




# <TRY52>

# C=0.01, class_weight=balanced, max_iter=2500, multi_class=auto, penalty=l1,
#  solver=liblinear, warm_start=False;, score=0.947 total time=15.7min  /*/*/*/*/* 6


# [CV 2/3] END bootstrap=True, class_weight=balanced_subsample, criterion=log_loss,
#  max_depth=10, max_features=None, min_samples_leaf=5, min_samples_split=5, n_estimators=800;, score=0.990 total time=16.3min  /*/**/*/ 6



# booster=gbtree, gamma=0, learning_rate=0.1, max_depth=10, min_child_weight=0.5,
#  n_estimators=300, reg_alpha=0.01, reg_lambda=0, subsample=0.5, tree_method=exact;, score=0.991 total time=  55.9s  /*/*/*/*/ 6


# <TRY5>
# C=10, class_weight=balanced, max_iter=2500, multi_class=ovr, penalty=l1,
#  solver=liblinear, warm_start=False;, score=0.948 total time=102.5min  */*/*/*/*/*



# [CV 2/3] END bootstrap=False, class_weight=balanced, criterion=log_loss,
# max_depth=6, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, n_estimators=200;, score=0.985 total time=  29.4s /*/*/*/*/


# [CV 2/3] END booster=gbtree, gamma=1, learning_rate=0.1, max_depth=6, 
#min_child_weight=1, n_estimators=100, reg_alpha=0.01, reg_lambda=0.01, subsample=0.5,
# tree_method=auto;, score=0.990 total time=  22.1s   /*/*/*/ 5



# TRY4
# [CV 2/3] END C=1, class_weight=balanced, max_iter=1000, multi_class=auto,
#  penalty=l2, random_state=42, solver=liblinear, warm_start=False;, score=0.935 total time=  13.3s

# [CV 2/3] END bootstrap=True, class_weight=balanced, criterion=gini,
#  max_depth=6, max_features=None, min_samples_leaf=50, min_samples_split=50,
#  n_estimators=800;, score=0.984 total time=12.4min


# [CV 2/3] END booster=gbtree, gamma=5, learning_rate=0.8, max_depth=10,
#  min_child_weight=5, n_estimators=100, reg_alpha=0, reg_lambda=0.01,
#  subsample=0.5, tree_method=hist;, score=0.976 total time=   2.5s




# <TRY3>
# [CV 2/3] END booster=gbtree, gamma=0, learning_rate=0.8, max_depth=6, 
# min_child_weight=0.5, n_estimators=100, reg_alpha=0, reg_lambda=1, subsample=0.5,
# tree_method=hist;, score=0.988 total time=   5.1s

# [CV 2/3] END bootstrap=True, class_weight=balanced_subsample, criterion=log_loss,
# max_depth=10, max_features=None, min_samples_leaf=5, min_samples_split=5,
# n_estimators=800;, score=0.990 total time=16.3min


# [CV 2/3] END C=1, class_weight=None, max_iter=2500, multi_class=auto, 
# penalty=l1, random_state=42, solver=liblinear, warm_start=True;, score=0.953 total time=70.6min   **********/*/*/*/*/









# [CV 2/3] END bootstrap=True, class_weight=balanced_subsample, criterion=log_loss, max_depth=10, max_features=None, min_samples_leaf=5, min_samples_split=5, n_estimators=800;, score=0.990 total time=16.3min
# [CV 2/3] END bootstrap=False, class_weight=balanced, criterion=entropy, max_depth=10, max_features=sqrt, min_samples_leaf=5, min_samples_split=5, n_estimators=800;, score=0.990 total time= 1.8min
# [CV 2/3] END booster=gbtree, gamma=0, learning_rate=0.1, max_depth=10, min_child_weight=0.5, n_estimators=300, reg_alpha=0.01, reg_lambda=0, subsample=0.5, tree_method=exact;, score=0.991 total time=  55.9s




# <TRY1>
# [CV 1/3] END C=1, class_weight=None, max_iter=2500, multi_class=auto, 
# penalty=l1, random_state=255, solver=liblinear, warm_start=True;, score=0.914 total time=71.0min
# [CV 2/3] END bootstrap=False, class_weight=balanced, criterion=log_loss,
#  max_depth=10, max_features=3, min_samples_leaf=5, min_samples_split=5,
# n_estimators=800;, score=0.988 total time=  26.3s

# %% feature combined 

import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *

cols_ = config['without_facility_stacking_cols'] 



a = r'E:\new_data_shahrivar_1402\small-biz\res_lg_without_fcl\\'
MODEL =  joblib.load(a + '_smallb_withoutFCL_shahriver402__trainedModel_.pkl')



get_model_feat_imps(sclf=MODEL, save_path=a, cols=cols_)

    
    
    
    
    

path = a + r'\Feature_importance\\'

xg = pd.read_csv(path + r'_XGboost__FeatureImportance_.csv', names=['features','importance'],header=0)
rf = pd.read_csv(path + r'_randomForest__FeatureImportance_.csv', names=['features','importance'],header=0)
lg = pd.read_csv(path + r'_Logistic__FeatureImportance_.csv', names=['features','importance'],header=0)

zzz = advanced_feature_importance(xgfi=xg,rffi=rf,lgfi=lg,
                                  CUSTGROUP_num=4,
                                  with_fcl=0,
                                  with_mali='NULL',
                                  from_date=13970101,to_date=15000101,
                                  FEATURE_TYPE_CODE=1,
                                  FEATURE_TYPE_DESC='USUAL',
                                  save_path=path + 'feature_combined')


# %% Combine Metric

import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *

out_y = pd.read_csv(r'E:\HYPER\sherkati\try1\out_ys.csv')

cc = get_metrics_all(y=out_y,save_dir='E:\HYPER\sherkati\\',plot=True,
                     train_no=1,
                     day_date=14000101,
                     custgroup=1,
                     with_fcl=1,
                     with_mali='Null'
                     )


# %% review MEHR 1402

import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *


config = {
    'out_path': r'f:\OUT\\', 
    'train_dataset':r'E:\new_data_shahrivar_1402\sherkati\sher_train2.csv',
    'test_df': r'E:\new_data_shahrivar_1402\sherkati\sher_test.csv',
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}

cols__ = config['with_facility_stacking_cols']
path = r'E:\GitLab\credit-risk-ai\test\train_test.csv'

# ==========================>>> inputs <<<=====================================
cols_ = config['with_facility_stacking_cols'] 
model_saved_name = 'smallb_withoutFCL_shahriver402_'
# =============================================================================



X_train, y_train = get_Xy(df_path=config['train_dataset'],cols=cols_, n_sample=500)  
MODEL = train_model(X=X_train,y=y_train,cat_cols=config['cat_cols'],smote=True,
                    model_name=model_saved_name, params=[None,None,None],
                    out_path=config['out_path']) # please use "/" forwardslash for directory  


X_train, y_train = get_Xy(df_path=config['train_dataset'],cols=cols_, n_sample=500)  
MODEL = train_model(X=X_train,y=y_train,cat_cols=config['cat_cols'],smote=True,
                    model_name=model_saved_name, params=[None,None,None],
                    out_path=config['out_path']) # please use "/" forwardslash for directory  



  
pos_p = r'E:\GitLab\credit-risk-ai\test\DS_Custgroup_4_Year_1400_Lable_1.csv'
neg_p = r'E:\GitLab\credit-risk-ai\test\DS_Custgroup_4_Year_1400_Lable_0.csv'




# 1
get_file_line_count(path)



# 2
result_df = get_random_sample(path, 10, config['with_facility_stacking_cols'])


# 3
x,y = get_Xy(df_path=config['train_dataset'],cols=cols__)



# 



#
evaluate_chunk(sclf=MODEL, cols=cols__,
             chunk_size= 10,
             pos_path=pos_p,
             neg_path=neg_p)





#
evaluate_(sclf=MODEL, cols=cols__, pos_path=pos_p, neg_path=neg_p)


#
evaluate_solo2(sclf=MODEL, cols=cols__,
             smote=False,
             test_path=config['test_df'],
             #out_path=os.getcwd(),
             prob=True)


# 
evaluate_solo(model=MODEL, cols=cols__, smote=False, test_path=config['test_df'])



from risk_utils import *



# 
Params =[lg_params, rf_params, xgb_params]
rf_params = {"max_depth": None,
    "n_estimators":250,
    "max_features": 11,
    "min_samples_split": 8,
    "min_samples_leaf": 2,
    "bootstrap": True,
    "criterion": 'log_loss'}


train_model(X=x, y=y, smote=True, model_name='akk',
            cat_cols=config['cat_cols'], params=[None, 'default', None],out_path=config['out_path'])



# %%%%







import sys 
sys.path.append(r'E:\\GitLab\\credit-risk-ai\\') # path of risk_utils
from risk_utils import *
from sklearn.model_selection import RandomizedSearchCV
from sklearn.model_selection import RandomizedSearchCV
from sklearn.ensemble import RandomForestClassifier
import pickle


#  CONFIG
# =============================================================================
config = {
    'out_path': r'f:\OUT\HYPER\\',            # models and data are saved in that folder
    
    # for train 
    'train_dataset':r'E:\new_data_shahrivar_1402\sherkati\sher_train2.csv',
    
    # for evaluate
    'test_df': r'E:\new_data_shahrivar_1402\sherkati\sher_test.csv',
    
    # needed columns
    'without_facility_stacking_cols': ['BIRTHDATE', 'OBSERVATION_DATE', 'CUSTGROUP', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE'],
    'with_facility_stacking_cols': ['BIRTHDATE','OBSERVATION_DATE', 'CUSTGROUP', 'CNTRCT_GRNTNGDT_MIN', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_1Y', 'CNTRCT_PNLTYDBT_MAX_ZND_SUM_3Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_1Y', 'CNTRCT_PNLTYDBT_SUM_ZND_MAX_3Y', 'CNTRCT_PNLTYRCV_SUM_1Y', 'CNTRCT_PNLTYRCV_SUM_3Y', 'CNTRCT_PAY_SUM_1Y', 'CNTRCT_PAY_SUM_3Y', 'CNTRCT_PAY_MAX_1Y', 'CNTRCT_PAY_MAX_3Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_1Y', 'CNTRCT_TDBT_MSHKK_ZND_RATIO_AVG_3Y', 'CNTRCT_TDBT_ZND_SUM_LAST', 'CNTRCT_SDBT_ZND_SUM_LAST', 'CNTRCT_TDBT_JARI_SUM_LAST', 'CNTRCT_SDBT_JARI_SUM_LAST', 'CNTRCT_TDBT_SQJARI_SUM_LAST', 'CNTRCT_SDBT_SQJARI_SUM_LAST', 'CNTRCT_TDBT_SRRSD_SUM_LAST', 'CNTRCT_SDBT_SRRSD_SUM_LAST', 'CNTRCT_TDBT_MVQ_SUM_LAST', 'CNTRCT_SDBT_MVQ_SUM_LAST', 'CNTRCT_TDBT_MSHKK_SUM_LAST', 'CNTRCT_SDBT_MSHKK_SUM_LAST', 'IND_CNTRCT_CNT_1Y', 'IND_CNTRCT_CNT_3Y', 'IND_CNTRCT_JARI_CNT_1Y', 'IND_CNTRCT_JARI_CNT_3Y', 'IND_CNTRCT_SRRSD_CNT_1Y', 'IND_CNTRCT_SRRSD_CNT_3Y', 'IND_CNTRCT_MVQ_CNT_1Y', 'IND_CNTRCT_MVQ_CNT_3Y', 'IND_CNTRCT_MSHKK_CNT_1Y', 'IND_CNTRCT_MSHKK_CNT_3Y', 'IND_CNTRCT_TDBT_SUM_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_JARI_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_SRRSD_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MVQ_MAX_3Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_1Y', 'IND_CNTRCT_TDBT_SUM_MSHKK_MAX_3Y', 'IND_CNTRCT_PAY_MAX_1Y', 'IND_CNTRCT_PAY_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_1Y', 'IND_CNTRCT_SMPAY_MAX_JARI_MAX_3Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_1Y', 'IND_CNTRCT_SMPAY_MAX_MSHKK_SUM_3Y', 'FCL_FCLTYSTS_MAX_1Y', 'FCL_FCLTYSTS_MAX_3Y', 'FCL_PAY_SUM_1Y', 'FCL_PAY_SUM_3Y', 'FCL_SMPAY_MAX_ZND_SUM_1Y', 'FCL_SMPAY_MAX_ZND_SUM_3Y', 'FCL_SMPAY_MAX_JARI_SUM_1Y', 'FCL_SMPAY_MAX_JARI_SUM_3Y', 'FCL_SMPAY_MAX_SQJARI_SUM_1Y', 'FCL_SMPAY_MAX_SQJARI_SUM_3Y', 'FCL_SMPAY_MAX_TSV_SUM_1Y', 'FCL_SMPAY_MAX_TSV_SUM_3Y', 'FCL_GRNTNGDT_CNT_1Y', 'FCL_GRNTNGDT_CNT_3Y', 'FCL_ZND_CNT_1Y', 'FCL_ZND_CNT_3Y', 'FCL_JARI_CNT_1Y', 'FCL_JARI_CNT_3Y', 'FCL_SQJARI_CNT_1Y', 'FCL_SQJARI_CNT_3Y', 'FCL_SRRSD_CNT_1Y', 'FCL_SRRSD_CNT_3Y', 'FCL_MVQ_CNT_1Y', 'FCL_MVQ_CNT_3Y', 'FCL_MSHKK_CNT_1Y', 'FCL_MSHKK_CNT_3Y', 'FCL_TSV_CNT_1Y', 'FCL_TSV_CNT_3Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_1Y', 'FCL_SRRSD_ENTRNC_NEG_CNT_3Y', 'FCL_SRRSD_ENTRNC_POS_CNT_1Y', 'FCL_SRRSD_ENTRNC_POS_CNT_3Y', 'FCL_MVQ_ENTRNC_NEG_CNT_1Y', 'FCL_MVQ_ENTRNC_NEG_CNT_3Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_1Y', 'FCL_MSHKK_ENTRNC_NEG_CNT_3Y', 'FCL_TDBT_MAX_JARI_SUM_1Y', 'FCL_TDBT_MAX_JARI_SUM_3Y', 'FCL_TDBT_MAX_SQJARI_SUM_1Y', 'FCL_TDBT_MAX_SQJARI_SUM_3Y', 'FCL_TDBT_MAX_MSHKK_SUM_1Y', 'FCL_TDBT_MAX_MSHKK_SUM_3Y', 'FCL_TDBT_SUM_ZND_MAX_1Y', 'FCL_TDBT_SUM_ZND_MAX_3Y', 'FCL_TDBT_SUM_JARI_MAX_1Y', 'FCL_TDBT_SUM_JARI_MAX_3Y', 'FCL_TDBT_SUM_SQJARI_MAX_1Y', 'FCL_TDBT_SUM_SQJARI_MAX_3Y', 'FCL_TDBT_SUM_MSHKK_MAX_1Y', 'FCL_TDBT_SUM_MSHKK_MAX_3Y', 'FCL_TDBT_SUM_TSV_MAX_1Y', 'FCL_TDBT_SUM_TSV_MAX_3Y', 'FCL_SDBT_MAX_ZND_SUM_1Y', 'FCL_SDBT_MAX_ZND_SUM_3Y', 'FCL_SDBT_MAX_JARI_SUM_1Y', 'FCL_SDBT_MAX_JARI_SUM_3Y', 'FCL_SDBT_MAX_SQJARI_SUM_1Y', 'FCL_SDBT_MAX_SQJARI_SUM_3Y', 'FCL_SDBT_MAX_SRRSD_SUM_1Y', 'FCL_SDBT_MAX_SRRSD_SUM_3Y', 'FCL_SDBT_MAX_MVQ_SUM_1Y', 'FCL_SDBT_MAX_MVQ_SUM_3Y', 'FCL_SDBT_MAX_TSV_SUM_1Y', 'FCL_SDBT_MAX_TSV_SUM_3Y', 'FCL_SDBT_SUM_ZND_MAX_1Y', 'FCL_SDBT_SUM_ZND_MAX_3Y', 'FCL_SDBT_SUM_JARI_MAX_1Y', 'FCL_SDBT_SUM_JARI_MAX_3Y', 'FCL_SDBT_SUM_SQJARI_MAX_1Y', 'FCL_SDBT_SUM_SQJARI_MAX_3Y', 'FCL_SDBT_SUM_SRRSD_MAX_1Y', 'FCL_SDBT_SUM_SRRSD_MAX_3Y', 'FCL_SDBT_SUM_MVQ_MAX_1Y', 'FCL_SDBT_SUM_MVQ_MAX_3Y', 'FCL_SDBT_SUM_TSV_MAX_1Y', 'FCL_SDBT_SUM_TSV_MAX_3Y', 'FCL_RCVAMNT_MAX_1Y', 'FCL_RCVAMNT_MAX_3Y', 'FCL_RCVAMNT_SUM_1Y', 'FCL_RCVAMNT_SUM_3Y', 'FCL_RCVAMNT_AVG_1Y', 'FCL_RCVAMNT_AVG_3Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_SRRSD_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_1Y', 'FCL_SDBT_MVQ_SUM_TDBT_ZND_SUM_RATIO_AVG_3Y', 'LC_GRN_CNT_1Y', 'LC_GRN_CNT_3Y', 'LC_GRN_GRNTNGDT_CNT_1Y', 'LC_GRN_GRNTNGDT_CNT_3Y', 'LC_GRN_ZABT_CNT_1Y', 'LC_GRN_ZABT_CNT_3Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_1Y', 'LC_GRN_GRNTNGDT_AMNT_MAX_SUM_3Y', 'LC_GRN_AMNT_MAX_ZND_SUM_1Y', 'LC_GRN_AMNT_MAX_ZND_SUM_3Y', 'LC_GRN_ZABT_PAY_SUM_1Y', 'LC_GRN_ZABT_PAY_SUM_3Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_1Y', 'LC_GRN_TDBT_MAX_BDHKRN_SUM_3Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_1Y', 'LC_GRN_TDBT_MAX_MSHKK_SUM_3Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_1Y', 'LC_GRN_TDBT_SUM_BDHKRN_MAX_3Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_1Y', 'LC_GRN_TDBT_SUM_MSHKK_MAX_3Y', 'ACC_BLNC_EOM_MAX_1Y', 'ACC_BLNC_EOM_AVG_1Y', 'ACC_FREE_BLNC_EOM_AVG_1Y', 'ACC_MDL_MON_AVG_1Y', 'ACC_COST_BLNC_EOM_MAX_1Y', 'ACC_FREE_BLNC_EOM_MAX_1Y', 'ACC_COST_BLNC_EOM_AVG_1Y', 'ACC_COST_MDL_MON_AVG_1Y', 'ACC_FREE_MDL_MON_AVG_1Y', 'ACC_COST_MDL_MON_MAX_1Y', 'ACC_FREE_MDL_MON_MAX_1Y', 'ACC_MDL_MON_MAX_1Y', 'ACC_BLNC_EOM_MAX_6M', 'ACC_BLNC_EOM_AVG_6M', 'ACC_FREE_BLNC_EOM_AVG_6M', 'ACC_MDL_MON_AVG_6M', 'ACC_COST_BLNC_EOM_MAX_6M', 'ACC_FREE_BLNC_EOM_MAX_6M', 'ACC_COST_BLNC_EOM_AVG_6M', 'ACC_COST_MDL_MON_AVG_6M', 'ACC_FREE_MDL_MON_AVG_6M', 'ACC_COST_MDL_MON_MAX_6M', 'ACC_FREE_MDL_MON_MAX_6M', 'ACC_MDL_MON_MAX_6M', 'ACC_BLNC_EOM_MAX_3M', 'ACC_BLNC_EOM_AVG_3M', 'ACC_FREE_BLNC_EOM_AVG_3M', 'ACC_MDL_MON_AVG_3M', 'ACC_COST_BLNC_EOM_MAX_3M', 'ACC_FREE_BLNC_EOM_MAX_3M', 'ACC_COST_BLNC_EOM_AVG_3M', 'ACC_COST_MDL_MON_AVG_3M', 'ACC_FREE_MDL_MON_AVG_3M', 'ACC_COST_MDL_MON_MAX_3M', 'ACC_FREE_MDL_MON_MAX_3M', 'ACC_MDL_MON_MAX_3M', 'TRN_CR_CNT_1Y', 'TRN_ACC_COST_CR_CNT_1Y', 'TRN_ACC_FREE_CR_CNT_1Y', 'TRN_CR_AMNT_SUM_1Y', 'TRN_ACC_COST_CR_AMNT_SUM_1Y', 'TRN_ACC_FREE_CR_AMNT_SUM_1Y', 'TRN_DB_CNT_1Y', 'TRN_ACC_COST_DB_CNT_1Y', 'TRN_ACC_FREE_DB_CNT_1Y', 'TRN_DB_AMNT_SUM_1Y', 'TRN_ACC_COST_DB_AMNT_SUM_1Y', 'TRN_ACC_FREE_DB_AMNT_SUM_1Y', 'TRN_CR_CNT_6M', 'TRN_ACC_COST_CR_CNT_6M', 'TRN_ACC_FREE_CR_CNT_6M', 'TRN_CR_AMNT_SUM_6M', 'TRN_ACC_COST_CR_AMNT_SUM_6M', 'TRN_ACC_FREE_CR_AMNT_SUM_6M', 'TRN_DB_CNT_6M', 'TRN_ACC_COST_DB_CNT_6M', 'TRN_ACC_FREE_DB_CNT_6M', 'TRN_DB_AMNT_SUM_6M', 'TRN_ACC_COST_DB_AMNT_SUM_6M', 'TRN_ACC_FREE_DB_AMNT_SUM_6M', 'TRN_CR_CNT_3M', 'TRN_ACC_COST_CR_CNT_3M', 'TRN_ACC_FREE_CR_CNT_3M', 'TRN_CR_AMNT_SUM_3M', 'TRN_ACC_COST_CR_AMNT_SUM_3M', 'TRN_ACC_FREE_CR_AMNT_SUM_3M', 'TRN_DB_CNT_3M', 'TRN_ACC_COST_DB_CNT_3M', 'TRN_ACC_FREE_DB_CNT_3M', 'TRN_DB_AMNT_SUM_3M', 'TRN_ACC_COST_DB_AMNT_SUM_3M', 'TRN_ACC_FREE_DB_AMNT_SUM_3M', 'CHQ_PASS_CNT_3Y', 'CHQ_PASS_AMNT_SUM_3Y', 'CHQ_RETURN_PASS_CNT_3Y', 'CHQ_RETURN_PASS_AMNT_SUM_3Y', 'CHQ_PASS_CNT_1Y', 'CHQ_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_PASS_CNT_1Y', 'CHQ_RETURN_PASS_AMNT_SUM_1Y', 'CHQ_RETURN_AMNT_SUM_3Y', 'CHQ_RETURN_CNT_3Y', 'CHQ_RETURN_AMNT_SUM_1Y', 'CHQ_RETURN_CNT_1Y', 'CHQ_CHQBK_CNT_3Y', 'CHQ_CHQBK_CNT_1Y', 'CBI_INQUERY_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_CNT_3Y', 'CBI_RETURN_CHQ_MAX_3Y', 'CBI_RETURN_CHQ_SUM_3Y', 'CBI_RETURN_CHQ_AVG_3Y', 'CBI_INQUERY_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_CNT_1Y', 'CBI_RETURN_CHQ_MAX_1Y', 'CBI_RETURN_CHQ_SUM_1Y', 'CBI_RETURN_CHQ_AVG_1Y', 'FIRSTACCCREATEDATE', 'SEXTYPE', 'BIRTHCITYCODE', 'CBI_CNTRCT_REQUEST_CNT_3Y', 'CBI_CNTRCT_CNTRCT_CNT_3Y', 'CBI_CNTRCT_ASL_MAX_MAX_3Y', 'CBI_CNTRCT_ASL_MAX_SUM_3Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_3Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_3Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_3Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_3Y', 'CBI_CNTRCT_REQUEST_CNT_1Y', 'CBI_CNTRCT_CNTRCT_CNT_1Y', 'CBI_CNTRCT_ASL_MAX_MAX_1Y', 'CBI_CNTRCT_ASL_MAX_SUM_1Y', 'CBI_CNTRCT_BEDEHI_MAX_MAX_1Y', 'CBI_CNTRCT_SARRESID_MAX_MAX_1Y', 'CBI_CNTRCT_MOAVAQ_MAX_MAX_1Y', 'CBI_CNTRCT_MASHKUK_MAX_MAX_1Y'],
    'cat_cols': ['CUSTGROUP', 'SEXTYPE', 'BIRTHCITYCODE'],
}
# =============================================================================
cols_ = config['without_facility_stacking_cols'] 

print('\n\nlen(cols_): ',len(cols_),'\n')


print('<<-- random search scikit learn -->> ')


X_train, y_train = get_Xy(df_path=config['train_dataset'],cols=cols_, n_sample=1_000)  

# X_test, y_test = get_Xy(df_path=config['test_df'],cols=cols_)  



rf_params = {
    "n_estimators": [10, 100, 1000],
    "max_depth": [5, 10, None],
    "min_samples_split": [2, 5, 10],
    "min_samples_leaf": [1, 5, 10],
    "max_features": ["auto", "sqrt", "log2"],
    "bootstrap": [True, False],
    "oob_score": [True, False],
    "n_jobs": [-1, None],
    "random_state": [255],
    "class_weight": [None, "balanced"]
}





rf = RandomForestClassifier()
random_search = RandomizedSearchCV(rf, param_distributions=rf_params,
                                   n_iter=2000, scoring='roc_auc', cv=3, 
                                   verbose=3, n_jobs=-1, random_state=255)


y_train = y_train.values

print('random search runs>')
random_search.fit(X_train, y_train.ravel())


joblib.dump(random_search, '/data/OUT/hyper_rf/hyper_Hyper_model_trainedModel_Rf_.pkl')


print("Best Parameters:", random_search.best_params_)































